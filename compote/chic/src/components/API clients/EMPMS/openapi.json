{"openapi":"3.1.0","info":{"title":"EMPMS API","version":"0.0.1"},"servers":[{"url":"/api"}],"paths":{"/pullpricingproductdatav10":{"post":{"tags":["EMP OICP Client API"],"summary":"Eroamingpullpricingproductdata V10","description":"__Note:__\n  * To `SEND`\n  * Implementation: `OPTIONAL`\n\n  When an EMP sends an eRoamingPullPricingProductData request, Hubject checks whether there is a valid flexible/dynamic pricing business contract (for the service type Authorization) between the EMP and the CPOs whose OperatorIDs are sent in the request. If so, the operation allows the download of pricing product data pushed to the HBS by these CPOs for the requesting EMP. When this request is received from an EMP, currently valid pricing products data available in the HBS for the requesting EMP (and pushed by CPOs whose OperatorIDs are supplied in the request) are grouped by OperatorID and sent in response to the request.\n\n  The operation also allows the use of the LastCall filter. When the LastCall filter is used, only pricing product data changes that have taken place after the date/time value provided in the “LastCall&quot; field of the request are sent to the EMP.","operationId":"eRoamingPullPricingProductData_V10_pullpricingproductdatav10_post","parameters":[{"name":"providerID","in":"query","required":false,"schema":{"type":"string","default":"DE-DCB","title":"Providerid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingPullPricingProductData","default":{"LastCall":"2020-09-23T14:33:42.246000+00:00","OperatorIDs":["DE*ABC"]}}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingPricingProductData"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pullevsepricingv10":{"post":{"tags":["EMP OICP Client API"],"summary":"Eroamingpullevsepricing V10","description":"__Note:__\n  * To `SEND`\n  * Implementation: `OPTIONAL`\n\nWhen an EMP sends an eRoamingPullPricingProductData request, Hubject checks whether there is a valid flexible/dynamic pricing business contract (for the service type Authorization) between the EMP and the CPOs whose OperatorIDs are sent in the request. If so, the operation allows the download of EVSE pricing data pushed to the HBS by these CPOs for the requesting EMP. When this request is received from an EMP, currently valid EVSE pricing data available in the HBS for the requesting EMP are grouped by OperatorID and sent in response to the request.\n\nThe operation also allows the use of the LastCall filter. When the LastCall filter is used, only EVSE pricing data changes that have taken place after the date/time value provided in the “LastCall&quot; field of the request are sent to the EMP.","operationId":"eRoamingPullEVSEPricing_V10_pullevsepricingv10_post","parameters":[{"name":"providerID","in":"query","required":false,"schema":{"type":"string","default":"DE-DCB","title":"Providerid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingPullEVSEPricing","default":{"ProviderID":"DE-DCB","LastCall":"2020-09-23T14:33:42.246000Z","OperatorIDs":["DE*ABC"]}}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingEVSEPricing"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/authorizeremotereservationstartv11":{"post":{"tags":["EMP OICP Client API"],"summary":"Eroamingauthorizeremotereservationstart V11","description":"__Note:__\n  * To `SEND`\n  * Implementation: `OPTIONAL`\n  * This operation is used by EMPs in order to remotely reserve a charging point.\n\n![Reservation start diagram](images/reservationstart.png)\n\n__Functional Description:__\n\nScenario:\n\nA customer of an EMP wants to reserve a charging point of a CPO for a later charging process.\nThe customer informs his EMP of his intention, e.g. via mobile phone or smart phone application.\nThe EMP’s provider system can then initiate a reservation of the CPO’s charging point by sending an eRoamingAuthorizeRemoteReservationStart request to Hubject.\nThe request `MUST` contain the ProviderID and the EvseID.\nThe demanded reservation product can be specified using the field PartnerProductID.\n\nHubject will derive the CPO’s OperatorID from the EvseID.\n\nHubject will check whether there is a valid contract between the two partners for the service Reservation (EMP must be the subscriber). If so, Hubject continues with checking the charging point compatibility. In case that the CPO has uploaded at least one charging point data record, Hubject will check whether the requested EvseID is among the uploaded data. If not, Hubject will respond with the status code 603 “Unknown EvseID”. If yes, Hubject will check whether the charging spot’s property “IsHubjectCompatible” is set “true”. If the property is false, Hubject will respond with the status code 604 “EvseID is not Hubject compatible”.\n\nIn case that the requested EvseID is compatible or the CPO has not uploaded any EVSE records at all, Hubject generates a SessionID for the reservation process and forwards the request (including the SessionID) to the CPO. The CPO MUST return an eRoamingAcknowledgement message that MUST contain the result indicating whether the reservation was successful and that MAY contain a status code for further information.\n\nIn case that the CPO’s system cannot be addressed (e.g. due to technical problems), Hubject will return to the requestor a “false” result and a message indicating the connection error.","operationId":"eRoamingAuthorizeRemoteReservationStart_V11_authorizeremotereservationstartv11_post","parameters":[{"name":"providerID","in":"query","required":false,"schema":{"type":"string","default":"DE-DCB","title":"Providerid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAuthorizeRemoteReservationStart","default":{"SessionID":"b2688855-7f00-0002-6d8e-48d883f6abb6","CPOPartnerSessionID":"1234XYZ","ProviderID":"DE-DCB","EvseID":"DE*XYZ*ETEST1","Identification":{"RFIDMifareFamilyIdentification":{"UID":"1234ABCD"},"RFIDIdentification":{"UID":"1234ABCD","EvcoID":"DE-DCB-C12345678-X","RFID":"mifareCls","PrintedNumber":"9876655","ExpiryDate":"2021-01-23T14:23:54.228Z"},"QRCodeIdentification":{"EvcoID":"DE-DCB-C12345678-X","HashedPIN":{"Value":"a5ghdhf73h","Function":"Bcrypt","LegacyHashData":{"Function":"MD5","Salt":"a5ghdhf73h","Value":"a5ghdhf73h"}},"PIN":"1234"},"PlugAndChargeIdentification":{"EvcoID":"DE-DCB-C12345678-X"},"RemoteIdentification":{"EvcoID":"DE-DCB-C12345678-X"}},"PartnerProductID":"Reservation","Duration":15}}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAcknowledgment"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/authorizeremotereservationstopv1":{"post":{"tags":["EMP OICP Client API"],"summary":"Eroamingauthorizeremotereservationstop V1","description":"__Note:__\n  * To `RECEIVE`\n  * Implementation: `OPTIONAL`\n\n![Reservation stop diagram](images/reservationstop.png)\n\neRoamingAuthorizeRemoteReservationStop basically works in the same way as eRoamingAuthorizeRemoteReservationStart.\nThe only difference is that this request is sent in order to end the reservation of a charging spot.\nThe request `MUST` contain the SessionID that was created by Hubject after the initial eRoamingAuthorizeRemoteReservationStart request.\nAfter the eRoamingAuthorizeRemoteReservationStop the CPO `MUST` provide a CDR.","operationId":"eRoamingAuthorizeRemoteReservationStop_V1_authorizeremotereservationstopv1_post","parameters":[{"name":"providerID","in":"query","required":false,"schema":{"type":"string","default":"DE-DCB","title":"Providerid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAuthorizeRemoteReservationStop","default":{"SessionID":"b2688855-7f00-0002-6d8e-48d883f6abb6","CPOPartnerSessionID":"1234XYZ","ProviderID":"DE-DCB","EvseID":"DE*XYZ*ETEST1"}}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAcknowledgment"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/authorizeremotestartv21":{"post":{"tags":["EMP OICP Client API"],"summary":"Eroamingauthorizeremotestart V21","description":"__Note:__\n  * To `SEND`\n  * Implementation: `MANDATORY`\n  * This operation is used by EMPs in order to remotely start a charging process\n\nThe service that is offered by Hubject in order to allow customers to directly start a charging process via mobile app.\n\n![Remote start diagram](images/remotestart.png)\n\n\n__Functional Description:__\n\n__Scenario:__\n\nA customer of an EMP wants to charge a vehicle at a charging station of a CPO. The customer informs his EMP of his intention, e.g. via mobile phone or smart phone application. The EMP’s provider system can then initiate a charging process at the CPO’s charging station by sending an eRoamingAuthorizeRemoteStart request to Hubject. The request `MUST` contain the ProviderID and the EvseID.\n\nHubject will derive the CPO’s OperatorID from the EvseID.\n\nHubject will check whether there is a valid contract between the two partners for the service (EMP must be the subscriber). If so, Hubject continues with checking the charging point compatibility. In case that the CPO has uploaded at least one charging point data record, Hubject will check whether the requested EvseID is among the uploaded data. If not, Hubject will respond with the status code 603 “Unknown EvseID”. If yes, Hubject will check whether the charging spot’s property “IsHubjectCompatible” is set “true”. If the property is false, Hubject will respond with the status code 604 “EvseID is not Hubject compatible”.\n\nIn case that the requested EvseID is compatible or the CPO has not uploaded any EVSE records at all, Hubject generates a SessionID for the following process and forwards the request (including the SessionID) to the CPO. The CPO `MUST` return an eRoamingAcknowledgement message that `MUST` contain the result indicating whether the charging process will be started and that `MAY` contain a status code for further information.\n\nIn case that the CPO’s system cannot be addressed (e.g. due to technical problems), Hubject will return to the requestor a “false” result and a message indicating the connection error.\n\nBest Practices:\n  * Please ensure a request run time of under 10 seconds including network roundtrip.","operationId":"eRoamingAuthorizeRemoteStart_v21_authorizeremotestartv21_post","parameters":[{"name":"providerID","in":"query","required":false,"schema":{"type":"string","default":"DE-DCB","title":"Providerid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAuthorizeRemoteStart","default":{"SessionID":"f98efba4-02d8-4fa0-b810-9a9d50d2c527","CPOPartnerSessionID":"1234XYZ","EMPPartnerSessionID":"2345ABC","ProviderID":"DE-DCB","EvseID":"DE*XYZ*ETEST1","Identification":{"RFIDMifareFamilyIdentification":{"UID":"1234ABCD"},"RFIDIdentification":{"UID":"1234ABCD","EvcoID":"DE-DCB-C12345678-X","RFID":"mifareCls","PrintedNumber":"9876655","ExpiryDate":"2021-01-23T14:21:36.954Z"},"QRCodeIdentification":{"EvcoID":"DE-DCB-C12345678-X","HashedPIN":{"Value":"string123456","Function":"Bcrypt","LegacyHashData":{"Function":"MD5","Salt":"string","Value":"string123456"}},"PIN":"1234"},"PlugAndChargeIdentification":{"EvcoID":"DE-DCB-C12345678-X"},"RemoteIdentification":{"EvcoID":"DE-DCB-C12345678-X"}},"PartnerProductID":"AC 1"}}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAcknowledgment"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/authorizeremotestopv21":{"post":{"tags":["EMP OICP Client API"],"summary":"Eroamingauthorizeremotestop V21","description":"__Note:__\n  * To `SEND`\n  * Implementation: `MANDATORY`\n\n![Remote stop diagram](images/remotestop.png)\n\neRoamingAuthorizeRemoteStop basically works in the same way as eRoamingAuthorizeRemoteStart. The only difference is that this request is sent in order to initiate the stopping of a charging process. The request `MUST` contain the SessionID that was created by Hubject after the initial eRoamingAuthorizeRemoteStart request.","operationId":"eRoamingAuthorizeRemoteStop_v21_authorizeremotestopv21_post","parameters":[{"name":"externalID","in":"query","required":false,"schema":{"type":"string","default":"DE-DCB","title":"Externalid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAuthorizeRemoteStop","default":{"SessionID":"f98efba4-02d8-4fa0-b810-9a9d50d2c527","CPOPartnerSessionID":"1234XYZ","EMPPartnerSessionID":"2345ABC","ProviderID":"DE-DCB","EvseID":"DE*XYZ*ETEST1"}}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAcknowledgment"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/getchargedetailrecordsv22":{"post":{"tags":["EMP OICP Client API"],"summary":"Eroaminggetchargedetailrecords V22","description":"__Note:__\n  * To `SEND`\n  * Implementation: EMP Online `OPTIONAL`, EMP Offline `MANDATORY`\n\n![Get Charge Detail Records diagram](images/getcdr.png)\n\nThe operation allows EMPs to download CDRs that have been sent to Hubject by partner CPOs. This means if for example Hubject was unable to forward a CDR from a CPO to an EMP due to technical problems in the EMP’s backend, the EMP will still have the option of obtaining these CDRs. The EMP `MUST` specify a date range in the request. Hubject will return a list of all CDRs received by the HBS within the specified date range for the requesting EMP (i.e. all CDRs within the date range where the corresponding charging process was authorized by the EMP or authorized by Hubject based on the EMP’s authentication data.\n\nHubject does not check whether a requested CDR has already been provided to the requesting EMP in the past.\n\nPagination:\n\nStarting from OICP 2.3, eRoaminGetChargeDetailRecords uses pagination. This is an implementation that EMPs `MUST` use in order to divide the amount of ChargeDetailRecords contained in the response of the pull request.\n\nThe parameters of the pagination are given at the end of the end point: `…​?page=0&amp;size=20` where `page` indicates the number of the page for the response and `size` the amount of records to be provided in the response.\n\nExample:\n\nUsing OICP 2.3 GetChargeDetailRecords endpoint for PROD environment:\n\nhttps://service.hubject.com/api/oicp/cdrmgmt/v22/providers/{providerID}/get-charge-detail-records-request?page=0&amp;size=1500\n\nIn the previous request we are telling to provide page __0__ with __1500__ records in it.\n\nImportant\n\nThe default number of records provided in the response are __20__ elements and the maximum number of records possible to obtain per page are __2000__.","operationId":"eRoamingGetChargeDetailRecords_V22_getchargedetailrecordsv22_post","parameters":[{"name":"providerID","in":"query","required":false,"schema":{"type":"string","default":"DE-DCB","title":"Providerid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingGetChargeDetailRecords","default":{"ProviderID":"DE-DCN","From":"2020-08-23T14:20:10.285000Z","To":"2020-09-23T14:20:10.285000Z","SessionID":["f98efba4-02d8-4fa0-b810-9a9d50d2c527"],"OperatorID":"DE*ABC"}}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingChargeDetailRecords"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pushauthenticationdatav21":{"post":{"tags":["EMP OICP Client API"],"summary":"Eroamingpushauthenticationdata V21","description":"__Note:__\n  * To `SEND`\n  * Implementation: `MANDATORY`\n\n![Push authentication data diagram](images/pushauthentificationdata.png)\n\nWhen an EMP sends an eRoamingPushAuthenticationData request, Hubject checks whether there is a valid contract between Hubject and the EMP for the service type (Hubject must be the subscriber). If so, the operation allows uploading authentication data to Hubject. Furthermore, it is possible to update authentication data that has been pushed with an earlier operation request. How Hubject handles the transferred data `MUST` be defined in the request field “ActionType”, which offers four options (see below).\n\nThe authentication data to be inserted or updated `MUST` be provided with the “ProviderAuthenticationData” field, which consists of “AuthenticationDataRecord” structures. Hubject keeps a history of all updated and changed data records. Every successful push operation – irrespective of the performed action – leads to a new version of currently valid data records. Furthermore, each operation is logged with the current timestamp. Thus, Hubject can reconstruct the status of authentication data for every point in time in the past.\n\n__Action types:__\n\n* __fullLoad:__ The EMP uploads the full set of current authentication data. Hubject does not compare the new data to old (earlier pushed) data. It keeps a history of old data records and handles the newly provided data as valid. In order to allow an easy deletion of all records, it is possible to perform a fullLoad with an empty list of records.\n\n* __insert:__ The EMP adds further authentication data records to the current set of data. Hubject verifies that the provided data records do not already exist in the currently valid data status. If so, the transaction will be aborted, no data will be inserted, and the request will be answered with an error message. Error details will be provided with the “AdditionalInfo” field.\n\n* __update:__ The EMP updates data records of the current set of data. Hubject verifies that the provided data records do exist in the currently valid data status. If not, the transaction will be aborted, no data will be updated, and the request will be answered with an error message.\n\n* __delete:__ The EMP deletes data records of the current set of data.\n\n__PIN security:__\n\nThe authentication data records that are uploaded to Hubject contain one of the defined identification types. The identification type “QRCodeIdentificationType” contains – besides an “EvcoID” field – a “PIN” field or a “HashedPIN” field (only one of the two options must be provided). For security reasons, Hubject generally does not store PINs in clear text, but always as encrypted hash values. When uploading authentication data to Hubject, the EMPs can directly provide hashed PIN values (using the field “HashedPIN”). In case that the PINs are provided in clear text (field “PIN”), Hubject will generate a hash value for every PIN and will store only the hashes. Hubject by default generates a hash using Bcrypt as a hashing function.\n\nIn case that an EMP provides already hashed PINs, he `MUST` also specify the corresponding hash generation algorithm so that Hubject can reproduce the hash generation when processing a request for authorization. For this reason, the “HashedPIN” field contains detailed information concerning the hash function and the hash salt value (for salted hash functions) that must be used for hash generation.\n\n__EVCO consistency:__\n\nEvcoIDs contain the ID of the corresponding EMP. With every data upload operation Hubject checks whether the given EMP’s ProviderID (or Sub-ProviderIDs if necessary) matches every given EvcoID. If not, Hubject refuses the data upload and responds with the status code 019.\n\nNote:\n\nThe eRoamingPushAuthenticationData operation `MUST` always be used sequentially.","operationId":"eRoamingPushAuthenticationData_V21_pushauthenticationdatav21_post","parameters":[{"name":"providerID","in":"query","required":false,"schema":{"type":"string","default":"DE-DCB","title":"Providerid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingPushAuthenticationData","default":{"ActionType":"fullLoad","ProviderAuthenticationData":{"ProviderID":"DE-DCB","AuthenticationDataRecord":[{"Identification":{"RFIDMifareFamilyIdentification":{"UID":"2A83155EE288040047C1"},"RFIDIdentification":{"UID":"2A83155EE288040047C1","EvcoID":"AB-123C12345678A","RFID":"mifareFamily","PrintedNumber":"string","ExpiryDate":"string"},"QRCodeIdentification":{"EvcoID":"AB-123C12345678A","PIN":"1234"},"PlugAndChargeIdentification":{"EvcoID":"AB-123C12345678A"},"RemoteIdentification":{"EvcoID":"AB-123C12345678A"}}}]}}}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAcknowledgment"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pullevsedatav23":{"post":{"tags":["EMP OICP Client API"],"summary":"Eroamingpullevsedata V23","description":"__Note:__\n  * To `SEND`\n  * Implementation: `MANDATORY`\n\n![Pull evse data diagram](images/pullevsedata.png)\n\nWhen an EMP sends an eRoamingPullEVSEData request, Hubject checks whether there is a valid contract between Hubject and the EMP for the service type (EMP must be the subscriber). If so, the operation allows downloading EVSEData from Hubject. When an EMP sends an eRoamingPullEVSEData request, Hubject identifies all currently valid EVSEData records of all operators.\n\nFor every EVSE data record Hubject identifies the timestamp of the last update, which has been performed on the record. The timestamp is returned with the attribute “lastUpdate”.\n\n__Delta pull:__\n\nAs mentioned above, the operation by default returns all currently valid EVSE data records. However, the requesting EMP has the possibility to download only the changes (delta) compared to a certain time in the past. In order to do so, the EMP MUST provide the optional date/time field “LastCall”, indicating his last EVSE pull request. In case that Hubject receives the LastCall parameter, Hubject compares the EVSE records from the time of the last call with the currently valid records. As a result, Hubject assigns the attribute “deltaType” (possible values: insert, update, delete) to every response EVSE data record indicating whether the particular record has been inserted, updated or deleted in the meantime. EVSE data records that have not changed will not be part of the response.\n\nNote:\n* The delta pull option cannot be combined with radial search, because in some cases this could lead to data inconsistency on the EMP’s side. This is why the API only allows the provision of either the attribute “SearchCenter” or “LastCall”.\n\n__Pagination:__\n\nStarting from OICP 2.3, eRoamingPullEvseData uses pagination. This is an implementation that EMPs `MUST` use in order to divide the amount of EvseDataRecords contained in the response of the pull request.\n\nThe parameters of the pagination are given at the end of the end point: `…​?page=0&amp;size=20` where `page` indicates the number of the page for the response and `size` the amount of records to be provided in the response.\n\nImportant:\n* __The default number of records provided in the eRoamingEvseData response is 20 elements.__","operationId":"eRoamingPullEvseData_V23_pullevsedatav23_post","parameters":[{"name":"providerID","in":"query","required":false,"schema":{"type":"string","default":"DE-DCB","title":"Providerid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingPullEVSEData","default":{"ProviderID":"DE-DCB","SearchCenter":{"GeoCoordinates":{"Google":{"Coordinates":"52.480495 13.356465"},"DecimalDegree":{"Longitude":"13.356465","Latitude":"52.480495"},"DegreeMinuteSeconds":{"Longitude":"9°21'39.32''","Latitude":"9°21'39.32''"}},"Radius":0},"LastCall":"2020-09-23T14:27:43.052000Z","GeoCoordinatesResponseFormat":"Google","CountryCodes":["DEU"],"OperatorIds":["DE*ABC"],"AuthenticationModes":["PnC"],"Accessibility":["Free publicly accessible"],"CalibrationLawDataAvailability":["Local"],"RenewableEnergy":true,"IsHubjectCompatible":true,"IsOpen24Hours":true}}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingEVSEData"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pullevsestatusv21":{"post":{"tags":["EMP OICP Client API"],"summary":"Eroamingpullevsestatus V21","description":"__Note:__\n  * To `SEND`\n  * Implementation: `Mandatory`\n\n![Pull EVSE status](images/pullevsestatus.png)\n\nWhen an EMP sends an eRoamingPullEVSEStatus request, Hubject checks whether there is a valid contract between Hubject and the EMP for the service type (EMP must be the subscriber). If so, the operation allows downloading EVSE status data from Hubject. When an EMP sends an eRoamingPullEVSEStatus request, Hubject identifies all currently valid EVSE status records of all operators.\n\nHubject groups all resulting EVSE status records according to the related CPO. The response structure contains an “EvseStatuses” node that envelopes an “OperatorEVSEStatus” node for every CPO with currently valid and accessible status data records.","operationId":"eRoamingPullEvseStatus_V21_pullevsestatusv21_post","parameters":[{"name":"providerID","in":"query","required":false,"schema":{"type":"string","default":"DE-DCB","title":"Providerid"}}],"requestBody":{"content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/ERoamingPullEVSEStatus-Input"},{"$ref":"#/components/schemas/ERoamingPullEVSEStatusByID"},{"$ref":"#/components/schemas/ERoamingPullEVSEStatusByOperatorID"}],"default":{"ProviderID":"DE-DCB"},"title":"Body"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingPullEVSEStatus-Output"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/authorizestartv21":{"post":{"tags":["EMP OICP Server API"],"summary":"Eroamingauthorizestart V21","description":"__Note:__\n  * To `RECEIVE`\n  * Implementation: `MANDATORY`\n\n__Functional Description:__\n\nScenario:\n\nA customer of an EMP wants to charge a vehicle at a charging point of a CPO. The customer authenticates at the charging point. The CPO’s operator system does not recognize the customer’s authentication data. In order to authorize the charging process, the CPO’s system can send an eRoamingAuthorizeStart request to Hubject. The request MUST contain the OperatorID and the identification data (e.g. UID or EvcoID) and MAY contain the EvseID.\n\nHubject generates a SessionID for the charging process and persists important session data (SessionID, EvseID, identification data).\n\nRegarding the further service processing, there are three different options:\n\na. Hubject first tries to authorize the customer offline by checking authentication master data. Authentication data can be uploaded by EMPs using the eRoamingAuthenticationData service.\n![Authorize Start offline diagram](images/authorizestart_offline.png)\n\nb. In case offline authorization is not possible, Hubject tries to derive the EMP from the provided identification data. QR Code and Plug&amp;Charge identification data contain the EvcoID. Hubject can derive the EMP’s ProviderID from the EvcoID. Hubject will directly forward eRoamingAuthorizeStart requests to the EMP. The EMP provider system checks the requested authentication data and responds accordingly, either by authorizing or not authorizing the request. The response `MUST` contain the ProviderID and the AuthorizationStatus and `MAY` contain a list of identification data that is authorized to stop the charging process. In case that the EMP provider system cannot be addressed (e.g. due to technical problems), the corresponding provider will be dealt with as if responding “NotAuthorized”.\n![Authorize evco diagram](images/authorize_evco.png)\n\nc. In case that Hubject cannot derive the EMP from the identification data (e.g. with RFID identification), Hubject identifies all EMPs that are under contract with the CPO (EMPs must be the service subscriber) and forwards the eRoamingAuthorizeStart request to all these EMPs (broadcast). Hubject consolidates all EMP responses and creates an overall response, authorizing the request in case that one EMP authorized the request.\n\n![Authorize Start online diagram](images/authorizestart_online.png)\n\nIn case that the request for authorization was not successful, Hubject deletes the corresponding SessionID for the charging process.\n\nThe response from Hubject to the CPO contains authorization details and in case of successful authorization the created SessionID and the ProviderID of the authorizing provider.","operationId":"eRoamingAuthorizeStart_v21_authorizestartv21_post","parameters":[{"name":"operatorID","in":"query","required":true,"schema":{"type":"string","title":"Operatorid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAuthorizeStart"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAuthorizationStart"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/authorizestopv21":{"post":{"tags":["EMP OICP Server API"],"summary":"Eroamingauthorizestop V21","description":"__Note:__\n  * To `RECEIVE`\n  * Implementation: `OPTIONAL`\n\n![Authorize stop diagram](images/authorizestop.png)\n\neRoamingAuthorizeStop basically works in a similar way to the operation eRoamingAuthorizeStart.\nThe request is sent in order to authorize the stopping of a charging process.\nThe request `MUST` contain the SessionID that was created by Hubject after the initial eRoamingAuthorizeStart request.\nIn most cases, Hubject can derive the EMP that authorized the charging process from the SessionID and can directly and offline authorize the request or forward the request for stopping to the EMP.\nIn case the charging session was originally authorized offline by the HBS, the session `MUST` only be stopped with the same medium, which was used for starting the session","operationId":"eRoamingAuthorizeStop_V21_authorizestopv21_post","parameters":[{"name":"operatorID","in":"query","required":true,"schema":{"type":"string","title":"Operatorid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAuthorizeStop"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAuthorizationStop"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chargedetailrecordv22":{"post":{"tags":["EMP OICP Server API"],"summary":"Eroamingchargedetailrecord V22","description":"__Note:__\n  * To `RECEIVE`\n  * Implementation: `MANDATORY`\n\n![Charge Detail Record diagram](images/cdr.png)\n\n__Functional Description:__\n\nScenario:\n\nA customer of an EMP has charged a vehicle at a charging station of a CPO. The charging process was started with an eRoamingAuthorizeStart or an eRoamingAuthorizeRemoteStart operation. The process may have been stopped with an eRoamingAuthorizeStop or an eRoamingAuthorizeRemoteStop operation. A preceding stop request is not a necessary precondition for the processing of an eRoamingChargeDetailRecord request. The CPO’s provider system `MUST` send an eRoamingChargeDetailRecord (CDR) after the end of the charging process in order to inform the EMP of the charging session data (e.g. meter values and consumed energy) and further charging process details.\n\nNote:\n\nThe CPO `MUST` provide the same SessionID that was assigned to the corresponding charging process. Based on this information Hubject will be able to assign the session data to the correct process.\n\nHubject will identify the receiving EMP and will forward the CDR to the corresponding EMP. The EMP `MUST` return an eRoamingAcknowledgement message that `MUST` contain the result indicating whether the session data was received successfully and that `MAY` contain a status code for further information.\n\nHubject will accept only one CDR per SessionID.\n\nIn addition to forwarding the CDR to the EMP, Hubject also stores the CDR. In case that the recipient provider’s system cannot be addressed (e.g. due to technical problems), Hubject will nevertheless return to the requestor a positive result provided that storing the CDR was successful.","operationId":"eRoamingChargeDetailRecord_V22_chargedetailrecordv22_post","parameters":[{"name":"operatorID","in":"query","required":true,"schema":{"type":"string","title":"Operatorid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingChargeDetailRecord-Input"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAcknowledgment"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chargingnotificationsv11":{"post":{"tags":["EMP OICP Server API"],"summary":"Eroamingchargingnotifications V11","description":"![Charging notifications diagram](images/chargingnotifications.png)\nThe ChargingNotification feature enables CPOs to notify EMPs about the end of charge\n\nThe ChargingNotification feature basically increases the transparency between CPO - EMP - End Consumer to the level of each charging session.\n\nThis feature enables CPO to send various notifications during a single Charging Session. These notifications give the details like\n\n1. When the charging session has started. The CPO can send ChargingNotification of type “Start” to Hubject containing information like ChargingStart, MeterStartValue, EVSEID etc.\n\n2. Consumed Energy values during the charging process or duration of successful charging process that has lapsed. The CPO can send ChargingNotification of type “Progress” to Hubject containing information like ChargingStart, EventOccurred, ChargingDuration, ConsumedEnergyProgress, EVSEID etc. The frequency between two progress notifications for one charging session should be at least 5 minutes.\n\n3. When the charging session has ended (because no energy is transmitted anymore). The CPO can send a ChargingNotification of type “End” to Hubject containing information such as ChargingEnd, ConsumedEnergy, EVSEID etc.\n\n4. Error occurred before charging starts or during charging process or abrupt changing end. The CPO can send a ChargingNotification of type “Error” to Hubject containing information such as ErrorClass, ErrorAdditionalInfo, EVSEID etc.\n\nHubject will forward Start, Progress, End and Error notification requests to the EMP. The EMP responds with an eRoamingAcknowledgement. This acknowledgement is then being forwarded to the CPO.\n\nThis feature should cover all the notifications that could happen between Session Start and Session End in future. Each bit of information increases transparency to the customer of EMP.","operationId":"eRoamingChargingNotifications_V11_chargingnotificationsv11_post","requestBody":{"content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/ERoamingChargingNotificationStart"},{"$ref":"#/components/schemas/ERoamingChargingNotificationProgress"},{"$ref":"#/components/schemas/ERoamingChargingNotificationEnd"},{"$ref":"#/components/schemas/ERoamingChargingNotificationError"}],"title":"Body"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ERoamingAcknowledgment"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"Accessibility":{"type":"string","enum":["Free publicly accessible","Restricted access","Paying publicly accessible","Test Station"],"title":"Accessibility","description":"Specifies how the charging station can be accessed.  | Option | Description | | ------ | ----------- | | Free publicly accessible | EV Driver can reach the charging point without paying a fee, e.g. street, free public place, free parking lot, etc. | | Restricted access | EV Driver needs permission to reach the charging point, e.g. Campus, building complex, etc. | | Paying publicly accessible | EV Driver needs to pay a fee in order to reach the charging point, e.g. payable parking garage, etc. | | Test Station | Station is just for testing purposes. Access may be restricted. | "},"AddressIso19773":{"properties":{"Country":{"type":"string","title":"Country","description":"The CountryCodeType allows for Alpha-3 country codes only as of OICP 2.2 and OICP 2.3  For Alpha-3 (three-letter) country codes as defined in ISO 3166-1.  __Examples:__  | Option | Description | | ------ | ----------- | | AUT | Austria | | DEU | Germany | | FRA | France | | USA | United States | "},"City":{"type":"string","title":"City"},"Street":{"type":"string","title":"Street"},"PostalCode":{"type":"string","title":"Postalcode"},"HouseNum":{"type":"string","title":"Housenum"},"Floor":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Floor"},"Region":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Region"},"ParkingFacility":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Parkingfacility"},"ParkingSpot":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Parkingspot"},"TimeZone":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Timezone","description":"`[U][T][C][+,-][0-9][0-9][:][0-9][0-9]` The expression validates a string as a Time zone with UTC offset.  Examples:  UTC+01:00  UTC-05:00 "}},"type":"object","required":["Country","City","Street","PostalCode","HouseNum"],"title":"AddressIso19773","description":"AddressIso19773"},"AuthenticationMode":{"type":"string","enum":["NFC RFID Classic","NFC RFID DESFire","PnC","REMOTE","Direct Payment","No Authentication Required"],"title":"AuthenticationMode","description":"| Option | Description | | NFC RFID Classic | Defined authentication. | | NFC RFID DESFire | Defined authentication. | | PnC | ISO/IEC 15118. | | REMOTE | App, QR-Code, Phone. | | Direct Payment | Remote use via direct payment. E.g. intercharge direct | | No Authentication Required | Not Authentication Method Required | "},"ChargingFacility":{"properties":{"PowerType":{"type":"string","title":"Powertype","description":"Charging Facility power type (e.g. AC or DC)"},"Voltage":{"anyOf":[{"type":"integer","maximum":999.0,"minimum":0.0},{"type":"null"}],"title":"Voltage","description":"Voltage (Line to Neutral) of the Charging Facility"},"Amperage":{"anyOf":[{"type":"integer","maximum":99.0,"minimum":0.0},{"type":"null"}],"title":"Amperage","description":"Amperage of the Charging Facility"},"Power":{"type":"integer","maximum":999.0,"minimum":0.0,"title":"Power","description":"Charging Facility power in kW"},"ChargingModes":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Chargingmodes","description":"List of charging modes that are supported."}},"type":"object","required":["PowerType","Power"],"title":"ChargingFacility","description":"ChargingFacility"},"ChargingNotificationType":{"type":"string","enum":["Start","Progress","End","Error"],"title":"ChargingNotificationType","description":"The type of ChargingNotification"},"ERoamingAcknowledgment":{"properties":{"Result":{"type":"boolean","title":"Result","description":"If result is true, the message was received and the respective operation was performed successfully.  If result is false, the message was received and the respective operation was not performed successfully. "},"StatusCode":{"$ref":"#/components/schemas/StatusCode"},"SessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation."},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation."}},"type":"object","required":["Result","StatusCode"],"title":"ERoamingAcknowledgment","description":"The acknowledgement is a message that is sent in response to several requests.  * To `SEND` and `RECEIVE` * Implementation: `MANDATORY` "},"ERoamingAuthorizationStart":{"properties":{"SessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation."},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation."},"ProviderID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"AuthorizationStatus":{"type":"string","title":"Authorizationstatus","description":"Information specifying whether the user is authorized to charge or not.  | Option | Description | | ------ | ----------- | | Authorized | User is authorized | | NotAuthorized | User is not authorized | "},"StatusCode":{"$ref":"#/components/schemas/StatusCode"},"AuthorizationStopIdentifications":{"anyOf":[{"items":{"$ref":"#/components/schemas/ERoamingAuthorizationStartAuthorizationStopIdentificationsInner"},"type":"array"},{"type":"null"}],"title":"Authorizationstopidentifications","description":"A list of Identification data that is authorized to stop the charging process."}},"type":"object","required":["AuthorizationStatus","StatusCode"],"title":"ERoamingAuthorizationStart","description":"Note:   * To `RECEIVE`   * Implementation: `MANDATORY`  eRoamingAuthorizationStart is a message that authorizes a user to charge a car. NOTE: This message describes the response which has to be receive in response to the eRoamingAuthorizeStart. "},"ERoamingAuthorizationStartAuthorizationStopIdentificationsInner":{"properties":{"RFIDMifareFamilyIdentification":{"anyOf":[{"$ref":"#/components/schemas/RFIDMifareFamilyIdentification"},{"type":"null"}]},"RFIDIdentification":{"anyOf":[{"$ref":"#/components/schemas/RFIDIdentification"},{"type":"null"}]},"QRCodeIdentification":{"anyOf":[{"$ref":"#/components/schemas/QRCodeIdentification-Output"},{"type":"null"}]},"PlugAndChargeIdentification":{"anyOf":[{"$ref":"#/components/schemas/PlugAndChargeIdentification"},{"type":"null"}]},"RemoteIdentification":{"anyOf":[{"$ref":"#/components/schemas/RemoteIdentification"},{"type":"null"}]}},"type":"object","title":"ERoamingAuthorizationStartAuthorizationStopIdentificationsInner","description":"ERoamingAuthorizationStartAuthorizationStopIdentificationsInner"},"ERoamingAuthorizationStop":{"properties":{"SessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation."},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation."},"ProviderID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"AuthorizationStatus":{"type":"string","title":"Authorizationstatus","description":"Information specifying whether the user is authorized to charge or not.  | Option | Description | | ------ | ----------- | | Authorized | User is authorized | | NotAuthorized | User is not authorized | "},"StatusCode":{"$ref":"#/components/schemas/StatusCode"}},"type":"object","required":["AuthorizationStatus","StatusCode"],"title":"ERoamingAuthorizationStop","description":"Note:   * To `RECEIVE`   * Implementation: `OPTIONAL`  eRoamingAuthorizeStop is a message to request an authorization for stopping a charging process.  Note:  This message describes the response which has to be received in return to the eRoamingAuthorizeStop request. "},"ERoamingAuthorizeRemoteReservationStart":{"properties":{"SessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation. Partner systems can use this field to link their own session handling to HBS processes."},"EMPPartnerSessionId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation. Partner systems can use this field to link their own session handling to HBS processes."},"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"Identification":{"$ref":"#/components/schemas/Identification-Input"},"PartnerProductID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Partnerproductid","description":"The ProductIDType defines some standard values (see below). The type however also supports custom ProductIDs that can be specified by partners (as a string of 50 characters maximum length). | Option | Description | |--------|-------------| | Standard Price | Standard Price | | AC1 | Product for AC 1 Phase charging | | AC3 | Product for AC 3 Phase charging | | DC | Product for DC charging | | CustomProductID | There is no option “CustomProductID”, this sample option is meant to indicates that custom product ID specifications by partners (as a string of 50 characters maximum length) are allowed as well.| "},"Duration":{"anyOf":[{"type":"integer","maximum":99.0,"minimum":1.0},{"type":"null"}],"title":"Duration","description":"Duration of reservation in minutes"}},"type":"object","required":["ProviderID","EvseID","Identification"],"title":"ERoamingAuthorizeRemoteReservationStart","description":"ERoamingAuthorizeRemoteReservationStart"},"ERoamingAuthorizeRemoteReservationStop":{"properties":{"SessionID":{"type":"string","title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation. Partner systems can use this field to link their own session handling to HBS processes."},"EMPPartnerSessionId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation. Partner systems can use this field to link their own session handling to HBS processes."},"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "}},"type":"object","required":["SessionID","ProviderID","EvseID"],"title":"ERoamingAuthorizeRemoteReservationStop","description":"ERoamingAuthorizeRemoteReservationStop"},"ERoamingAuthorizeRemoteStart":{"properties":{"SessionID":{"type":"string","title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation."},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation."},"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"Identification":{"$ref":"#/components/schemas/Identification-Input"},"PartnerProductID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Partnerproductid","description":"The ProductIDType defines some standard values (see below). The type however also supports custom ProductIDs that can be specified by partners (as a string of 50 characters maximum length). | Option | Description | |--------|-------------| | Standard Price | Standard Price | | AC1 | Product for AC 1 Phase charging | | AC3 | Product for AC 3 Phase charging | | DC | Product for DC charging | | CustomProductID | There is no option “CustomProductID”, this sample option is meant to indicates that custom product ID specifications by partners (as a string of 50 characters maximum length) are allowed as well.| "}},"type":"object","required":["SessionID","ProviderID","EvseID","Identification"],"title":"ERoamingAuthorizeRemoteStart","description":"ERoamingAuthorizeRemoteStart"},"ERoamingAuthorizeRemoteStop":{"properties":{"SessionID":{"type":"string","title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation."},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation."},"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "}},"type":"object","required":["SessionID","ProviderID","EvseID"],"title":"ERoamingAuthorizeRemoteStop","description":"ERoamingAuthorizeRemoteStop"},"ERoamingAuthorizeStart":{"properties":{"SessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation."},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation."},"OperatorID":{"type":"string","title":"Operatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"EvseID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"Identification":{"$ref":"#/components/schemas/Identification-Input"},"PartnerProductID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Partnerproductid","description":"The ProductIDType defines some standard values (see below). The type however also supports custom ProductIDs that can be specified by partners (as a string of 50 characters maximum length). | Option | Description | |--------|-------------| | Standard Price | Standard Price | | AC1 | Product for AC 1 Phase charging | | AC3 | Product for AC 3 Phase charging | | DC | Product for DC charging | | CustomProductID | There is no option “CustomProductID”, this sample option is meant to indicates that custom product ID specifications by partners (as a string of 50 characters maximum length) are allowed as well.| "}},"type":"object","required":["OperatorID","Identification"],"title":"ERoamingAuthorizeStart","description":"Best Practices: * The EVSE ID is optional for this message which is e.g. defined after the RFID authorization at a charge point. If the Evse ID can be provided, we recommend to include the EVSE ID in this message; it will help for support matters. * If an authorization process could not successfully be executed, please set an error code by refering to the error code list mentioned in the OICP document. "},"ERoamingAuthorizeStop":{"properties":{"SessionID":{"type":"string","title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation."},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation."},"OperatorID":{"type":"string","title":"Operatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"EvseID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"Identification":{"$ref":"#/components/schemas/Identification-Input"}},"type":"object","required":["SessionID","OperatorID","Identification"],"title":"ERoamingAuthorizeStop","description":"ERoamingAuthorizeStop"},"ERoamingChargeDetailRecord-Input":{"properties":{"SessionID":{"type":"string","title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation."},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation."},"PartnerProductID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Partnerproductid","description":"The ProductIDType defines some standard values (see below). The type however also supports custom ProductIDs that can be specified by partners (as a string of 50 characters maximum length). | Option | Description | |--------|-------------| | Standard Price | Standard Price | | AC1 | Product for AC 1 Phase charging | | AC3 | Product for AC 3 Phase charging | | DC | Product for DC charging | | CustomProductID | There is no option “CustomProductID”, this sample option is meant to indicates that custom product ID specifications by partners (as a string of 50 characters maximum length) are allowed as well.| "},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"Identification":{"$ref":"#/components/schemas/Identification-Input"},"ChargingStart":{"type":"string","format":"date-time","title":"Chargingstart","description":"The date and time at which the charging process started."},"ChargingEnd":{"type":"string","format":"date-time","title":"Chargingend","description":"The date and time at which the charging process stoped."},"SessionStart":{"type":"string","format":"date-time","title":"Sessionstart","description":"The date and time at which the session started, e.g. swipe of RFID or cable connected."},"SessionEnd":{"type":"string","format":"date-time","title":"Sessionend","description":"The date and time at which the session started, e.g. swipe of RFID or cable connected."},"MeterValueStart":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Metervaluestart","description":"The starting meter value in kWh."},"MeterValueEnd":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Metervalueend","description":"The ending meter value in kWh."},"MeterValueInBetween":{"anyOf":[{"$ref":"#/components/schemas/ERoamingChargeDetailRecordMeterValueInBetween"},{"type":"null"}]},"ConsumedEnergy":{"anyOf":[{"type":"number"},{"type":"integer"}],"title":"Consumedenergy","description":"The difference between MeterValueEnd and MeterValueStart in kWh."},"SignedMeteringValues":{"anyOf":[{"items":{"$ref":"#/components/schemas/ERoamingChargeDetailRecordSignedMeteringValuesInner"},"type":"array"},{"type":"null"}],"title":"Signedmeteringvalues","description":"Metering Signature basically contains all metering signature values (these values should be in Transparency software format) for different status of charging session for eg start, end or progress. In total you can provide maximum 10 metering signature values"},"CalibrationLawVerificationInfo":{"anyOf":[{"$ref":"#/components/schemas/ERoamingChargeDetailRecordCalibrationLawVerificationInfo"},{"type":"null"}]},"HubOperatorID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Huboperatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"HubProviderId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Hubproviderid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "}},"type":"object","required":["SessionID","EvseID","Identification","ChargingStart","ChargingEnd","SessionStart","SessionEnd","ConsumedEnergy"],"title":"ERoamingChargeDetailRecord","description":"eRoamingChargeDetailRecord is a message that contains charging process details (e.g. meter values)."},"ERoamingChargeDetailRecord-Output":{"properties":{"SessionID":{"type":"string","title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session id assigned by the CPO to the related operation."},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session id assigned by an EMP to the related operation."},"PartnerProductID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Partnerproductid","description":"The ProductIDType defines some standard values (see below). The type however also supports custom ProductIDs that can be specified by partners (as a string of 50 characters maximum length). | Option | Description | |--------|-------------| | Standard Price | Standard Price | | AC1 | Product for AC 1 Phase charging | | AC3 | Product for AC 3 Phase charging | | DC | Product for DC charging | | CustomProductID | There is no option “CustomProductID”, this sample option is meant to indicates that custom product ID specifications by partners (as a string of 50 characters maximum length) are allowed as well.| "},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"Identification":{"$ref":"#/components/schemas/Identification-Output"},"ChargingStart":{"type":"string","format":"date-time","title":"Chargingstart","description":"The date and time at which the charging process started."},"ChargingEnd":{"type":"string","format":"date-time","title":"Chargingend","description":"The date and time at which the charging process stoped."},"SessionStart":{"type":"string","format":"date-time","title":"Sessionstart","description":"The date and time at which the session started, e.g. swipe of RFID or cable connected."},"SessionEnd":{"type":"string","format":"date-time","title":"Sessionend","description":"The date and time at which the session started, e.g. swipe of RFID or cable connected."},"MeterValueStart":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Metervaluestart","description":"The starting meter value in kWh."},"MeterValueEnd":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Metervalueend","description":"The ending meter value in kWh."},"MeterValueInBetween":{"anyOf":[{"$ref":"#/components/schemas/ERoamingChargeDetailRecordMeterValueInBetween"},{"type":"null"}]},"ConsumedEnergy":{"anyOf":[{"type":"number"},{"type":"integer"}],"title":"Consumedenergy","description":"The difference between MeterValueEnd and MeterValueStart in kWh."},"SignedMeteringValues":{"anyOf":[{"items":{"$ref":"#/components/schemas/ERoamingChargeDetailRecordSignedMeteringValuesInner"},"type":"array"},{"type":"null"}],"title":"Signedmeteringvalues","description":"Metering Signature basically contains all metering signature values (these values should be in Transparency software format) for different status of charging session for eg start, end or progress. In total you can provide maximum 10 metering signature values"},"CalibrationLawVerificationInfo":{"anyOf":[{"$ref":"#/components/schemas/ERoamingChargeDetailRecordCalibrationLawVerificationInfo"},{"type":"null"}]},"HubOperatorID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Huboperatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"HubProviderId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Hubproviderid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "}},"type":"object","required":["SessionID","EvseID","Identification","ChargingStart","ChargingEnd","SessionStart","SessionEnd","ConsumedEnergy"],"title":"ERoamingChargeDetailRecord","description":"eRoamingChargeDetailRecord is a message that contains charging process details (e.g. meter values)."},"ERoamingChargeDetailRecordCalibrationLawVerificationInfo":{"properties":{"CalibrationLawCertificateID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Calibrationlawcertificateid","description":"The Calibration Law Compliance ID from respective authority along with the revision and issueing date (Compliance ID : Revision : Date) For eg PTB - X-X-XXXX : V1 : 01Jan2020"},"PublicKey":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Publickey","description":"Unique PublicKey for EVSEID can be provided here"},"MeteringSignatureUrl":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Meteringsignatureurl","description":"In this field CPO can also provide a url for xml file. This xml file can give the compiled Calibration Law Data information which can be simply added to invoices for Customer of EMP.  The information can contain for eg Charging Station Details, Charging Session Date/Time, SignedMeteringValues (Transparency Software format), SignedMeterValuesVerificationInstruction etc. "},"MeteringSignatureEncodingFormat":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Meteringsignatureencodingformat","description":"Encoding format of the metering signature data as well as the version (e.g. EDL40 Mennekes: V1)"},"SignedMeteringValuesVerificationInstruction":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Signedmeteringvaluesverificationinstruction","description":"Additional information (e.g. instruction on how to use the transparency software)"}},"type":"object","title":"ERoamingChargeDetailRecordCalibrationLawVerificationInfo","description":"This field provides additional information which could help directly or indirectly to verify the signed metering value by using respective Transparency Software"},"ERoamingChargeDetailRecordMeterValueInBetween":{"properties":{"meterValues":{"anyOf":[{"items":{"anyOf":[{"type":"number"},{"type":"integer"}]},"type":"array"},{"type":"null"}],"title":"Metervalues"}},"type":"object","title":"ERoamingChargeDetailRecordMeterValueInBetween","description":"List of meter values that may have been taken in between (kWh)."},"ERoamingChargeDetailRecordSignedMeteringValuesInner":{"properties":{"SignedMeteringValue":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Signedmeteringvalue","description":"Metering signature value (in the Transparency software format)  SignedMeteringValue `SHOULD` be always sent in following order 1. SignedMeteringValue for Metering Status “Start” 2. SignedMeteringValue for Metering Status “Progress1” 3. SignedMeteringValue for Metering Status “Progress2” 4. … 5. SignedMeteringValue for Metering Status “Progress8” 6. SignedMeteringValue for Metering Status “End”  Note:  1. This field `MUST` be provided when the EVSEID in the ChargeDetailRecord contains the \"External\" value in the CalibrationLawDataAvailability field. 2. The MeteringSignatureValue format provided `MUST` be supported by the Transparency Software used by the CPO "},"MeteringStatus":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Meteringstatus","description":"| Option | Description | | ------ | ----------- | | Start | Metering signature value of the beginning of charging process. | | Progress | An intermediate metering signature value of the charging process. | | End | Metering Signature Value of the end of the charging process. | "}},"type":"object","title":"ERoamingChargeDetailRecordSignedMeteringValuesInner","description":"ERoamingChargeDetailRecordSignedMeteringValuesInner"},"ERoamingChargeDetailRecords":{"properties":{"content":{"items":{"$ref":"#/components/schemas/ERoamingChargeDetailRecord-Output"},"type":"array","title":"Content"},"number":{"type":"integer","title":"Number","description":"Number of the page"},"size":{"type":"integer","title":"Size","description":"Size of records requested per page"},"totalElements":{"type":"integer","title":"Totalelements","description":"Number of total charge detail records available from the request"},"last":{"type":"boolean","title":"Last","description":"Indicates if the current page is the last page"},"totalPages":{"type":"integer","title":"Totalpages","description":"Number of total pages available for the request"},"first":{"type":"boolean","title":"First","description":"indicates if the current page is the first page"},"numberOfElements":{"type":"integer","title":"Numberofelements","description":"Number of records in the page"},"StatusCode":{"$ref":"#/components/schemas/StatusCode"}},"type":"object","required":["content","number","size","totalElements","last","totalPages","first","numberOfElements","StatusCode"],"title":"ERoamingChargeDetailRecords","description":"eRoamingChargeDetailRecord is a message containing charging process details (such as meter values, etc.)."},"ERoamingChargingNotificationEnd":{"properties":{"Type":{"$ref":"#/components/schemas/ChargingNotificationType"},"SessionID":{"type":"string","title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session ID assigned by the CPO to the related operation.  Partner systems can use this field to link their own session handling to HBS processes. "},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session ID assigned by an EMP to the related operation.  Partner systems can use this field to link their own session handling to HBS processes. "},"Identification":{"anyOf":[{"$ref":"#/components/schemas/Identification-Input"},{"type":"null"}]},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"ChargingStart":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Chargingstart","description":"The date and time at which the charging process started."},"ChargingEnd":{"type":"string","format":"date-time","title":"Chargingend","description":"The date and time at which the charging process stoped."},"SessionStart":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Sessionstart","description":"The date and time at which the session started, e.g. swipe of RFID or cable connected."},"SessionEnd":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Sessionend","description":"The date and time at which the session started, e.g. swipe of RFID or cable connected."},"ConsumedEnergy":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Consumedenergy","description":"The difference between MeterValueEnd and MeterValueStart in kWh."},"MeterValueStart":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Metervaluestart","description":"The starting meter value in kWh."},"MeterValueEnd":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Metervalueend","description":"The ending meter value in kWh."},"MeterValueInBetween":{"anyOf":[{"$ref":"#/components/schemas/ERoamingChargeDetailRecordMeterValueInBetween"},{"type":"null"}]},"OperatorID":{"type":"string","title":"Operatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"PartnerProductID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Partnerproductid","description":"The ProductIDType defines some standard values (see below). The type however also supports custom ProductIDs that can be specified by partners (as a string of 50 characters maximum length). | Option | Description | |--------|-------------| | Standard Price | Standard Price | | AC1 | Product for AC 1 Phase charging | | AC3 | Product for AC 3 Phase charging | | DC | Product for DC charging | | CustomProductID | There is no option “CustomProductID”, this sample option is meant to indicates that custom product ID specifications by partners (as a string of 50 characters maximum length) are allowed as well.| "},"PenaltyTimeStart":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Penaltytimestart","description":"The date and time at which the penalty time start after the grace period."}},"type":"object","required":["Type","SessionID","EvseID","ChargingEnd","OperatorID"],"title":"ERoamingChargingNotificationEnd","description":"A customer of an EMP has fully charged a vehicle at a charging station of a CPO. The charging process was started with an eRoamingAuthorizeStart or an eRoamingAuthorizeRemoteStart operation. The energy flow has ended, but the process has not yet been stopped and the vehicle is blocking the charging station.  The CPO’s backend system MAY send a ChargingNotification of type “End” after the CPO considers the charging of an EV concluded (because no energy is transmitted anymore) in order to inform the EMP that the actual charging (the energy flow) of the vehicle has stopped. The charging process has not yet been stopped by the customer and the session is still active.  The ChargingNotification of type “End” is a message that contains information about the charging end of a session (e.g. ConsumedEnergy, ChargingEnd). "},"ERoamingChargingNotificationError":{"properties":{"Type":{"$ref":"#/components/schemas/ChargingNotificationType"},"SessionID":{"type":"string","title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session ID assigned by the CPO to the related operation.  Partner systems can use this field to link their own session handling to HBS processes. "},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session ID assigned by an EMP to the related operation.  Partner systems can use this field to link their own session handling to HBS processes. "},"Identification":{"anyOf":[{"$ref":"#/components/schemas/Identification-Input"},{"type":"null"}]},"OperatorID":{"type":"string","title":"Operatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"ErrorType":{"type":"string","title":"Errortype","description":"| Option | Description | | ------ | ----------- | | ConnectorError | Charging process cannot be started or stopped. EV driver needs to check if the the Plug is properly inserted or taken out from socket. | | CriticalError | Charging process stopped abruptly. Reason: Physical check at the station is required. Station cannot be reset online. <br /> Or <br /> Error with the software or hardware of the station locally. <br /> Or <br /> Communication failure with the vehicle. <br /> Or <br /> The error needs to be investigated <br /> Or <br /> Ground Failure | "},"ErrorAdditionalInfo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Erroradditionalinfo","description":"The CPO can put in the additional information about the error"}},"type":"object","required":["Type","SessionID","OperatorID","EvseID","ErrorType"],"title":"ERoamingChargingNotificationError","description":"A customer of EMP Authorizes the charging session at particular charging station (via any means for eg REFID card, Mobile etc). Due to some errors sometime, it is possible that charging does not start or charging process is abruptly stopped or fluctuations in the charging process. It is really important for Customer as well as EMP to know what exactly is happening at the charging process. This notification eventually helps EMPs well informed about the problem occurred with the charging process. This information can be easily passed onto Customer so that he/she can take appropriate action.  The CPO’s backend system MAY send a ChargingNotification of type “Error” after the CPO gets an information about the error at the charging station. The CPO can transmit one of the ErrorClass defined by Hubject along with the additional information which elaborated the Error. The customer has to take one of the three action EV needs to be charged at some different station, Cables is properly attached or the error is for information only no action required by customer.  The ChargingNotification of type “Error” is a message that contains information about the charging end of a session (e.g. ErrorClass, ErrorAdditionalInfo). "},"ERoamingChargingNotificationProgress":{"properties":{"Type":{"$ref":"#/components/schemas/ChargingNotificationType"},"SessionID":{"type":"string","title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session ID assigned by the CPO to the related operation.  Partner systems can use this field to link their own session handling to HBS processes. "},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session ID assigned by an EMP to the related operation.  Partner systems can use this field to link their own session handling to HBS processes. "},"Identification":{"anyOf":[{"$ref":"#/components/schemas/Identification-Input"},{"type":"null"}]},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"ChargingStart":{"type":"string","format":"date-time","title":"Chargingstart","description":"The date and time at which the charging process started."},"EventOccurred":{"type":"string","format":"date-time","title":"Eventoccurred","description":"The date and time at which the charging progress parameters are captured."},"ChargingDuration":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Chargingduration","description":"Charging Duration = EventOccurred - Charging Duration. It is a time in millisecond.  Either ChargingDuration or ConsumedEnergyProgress should be provided. Both can also be provided with each progress notification. "},"SessionStart":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Sessionstart","description":"The date and time at which the session started, e.g. swipe of RFID or cable connected."},"ConsumedEnergyProgress":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Consumedenergyprogress","description":"This is consumed energy when from Start of charging process till the charging progress notification generated (EventOccurred)  Either ChargingDuration or ConsumedEnergyProgress should be provided. Both can also be provided with each progress notification. "},"MeterValueStart":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Metervaluestart","description":"The starting meter value in kWh."},"MeterValueInBetween":{"anyOf":[{"$ref":"#/components/schemas/ERoamingChargeDetailRecordMeterValueInBetween"},{"type":"null"}]},"OperatorID":{"type":"string","title":"Operatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"PartnerProductID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Partnerproductid","description":"The ProductIDType defines some standard values (see below). The type however also supports custom ProductIDs that can be specified by partners (as a string of 50 characters maximum length). | Option | Description | |--------|-------------| | Standard Price | Standard Price | | AC1 | Product for AC 1 Phase charging | | AC3 | Product for AC 3 Phase charging | | DC | Product for DC charging | | CustomProductID | There is no option “CustomProductID”, this sample option is meant to indicates that custom product ID specifications by partners (as a string of 50 characters maximum length) are allowed as well.| "}},"type":"object","required":["Type","SessionID","EvseID","ChargingStart","EventOccurred","OperatorID"],"title":"ERoamingChargingNotificationProgress","description":"A customer of EMP has started the charging session. Just like as that of regular gasoline stations customer would like to know either how much charging Duration have passed or how much energy is consumed by the EV so far. This information will help Customer to decide if he/she wants to stop the charging session as per their affordability or journey planning.  The CPO’s backend system MAY send a ChargingNotification of type “Progess” after the CPO gets the charging energy or time information from EVSEID. This is required in order to inform the EMP that the progress energy or chargingduration for a perticular charging session.  The ChargingNotification of type “Progress” is a message that contains information about the charging Duration or energy consumed during charging process (e.g. EventOccurred, ChargingDuration, ConsumedEnergyProgress). "},"ERoamingChargingNotificationStart":{"properties":{"Type":{"$ref":"#/components/schemas/ChargingNotificationType"},"SessionID":{"type":"string","title":"Sessionid","description":"The Hubject SessionID that identifies the process  A string that `MUST` be valid with respect to the following regular expression:  `^[A-Za-z0-9]{8}(-[A-Za-z0-9]{4}){3}-[A-Za-z0-9]{12}$`  The expression validates the string as a GUID.  Example: “b2688855-7f00-0002-6d8e-48d883f6abb6” "},"CPOPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Cpopartnersessionid","description":"Optional field containing the session ID assigned by the CPO to the related operation.  Partner systems can use this field to link their own session handling to HBS processes. "},"EMPPartnerSessionID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emppartnersessionid","description":"Optional field containing the session ID assigned by an EMP to the related operation.  Partner systems can use this field to link their own session handling to HBS processes. "},"Identification":{"anyOf":[{"$ref":"#/components/schemas/Identification-Input"},{"type":"null"}]},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"ChargingStart":{"type":"string","format":"date-time","title":"Chargingstart","description":"The date and time at which the charging process started."},"SessionStart":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Sessionstart","description":"The date and time at which the session started, e.g. swipe of RFID or cable connected."},"MeterValueStart":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Metervaluestart","description":"The starting meter value in kWh."},"OperatorID":{"type":"string","title":"Operatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"PartnerProductID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Partnerproductid","description":"The ProductIDType defines some standard values (see below). The type however also supports custom ProductIDs that can be specified by partners (as a string of 50 characters maximum length). | Option | Description | |--------|-------------| | Standard Price | Standard Price | | AC1 | Product for AC 1 Phase charging | | AC3 | Product for AC 3 Phase charging | | DC | Product for DC charging | | CustomProductID | There is no option “CustomProductID”, this sample option is meant to indicates that custom product ID specifications by partners (as a string of 50 characters maximum length) are allowed as well.| "}},"type":"object","required":["Type","SessionID","EvseID","ChargingStart","OperatorID"],"title":"ERoamingChargingNotificationStart","description":"A customer of EMP Authorizes the charging session at particular charging station (via any means for eg REFID card, Mobile etc). The charging session is authorized by Hubject / CPO system. The authorization of charging process and plugging the cable in EV does not guarantee that energy flow into the Vehicle is initiated. It is really important for for EMP and its end consumer to know if the charging has started.  The CPO’s backend system MAY send a ChargingNotification of type “Start” after the CPO considers the charging of an EV is started (since energy flow have started) in order to inform the EMP that the actual charging (the energy flow) of the vehicle has started.  The ChargingNotification of type “Start” is a message that contains information about the charging start of a session (e.g. ChargingStart). "},"ERoamingEVSEData":{"properties":{"content":{"items":{"$ref":"#/components/schemas/PullEvseDataRecord"},"type":"array","title":"Content","description":"A list of EVSE data blocks that are each assigned to a certain operator."},"number":{"type":"integer","title":"Number","description":"Number of the page"},"size":{"type":"integer","title":"Size","description":"Size of records requested per page"},"totalElements":{"type":"integer","title":"Totalelements","description":"Number of total charging stations available from the request"},"last":{"type":"boolean","title":"Last","description":"Indicates if the current page is the last page"},"totalPages":{"type":"integer","title":"Totalpages","description":"Number of total pages available for the request"},"first":{"type":"boolean","title":"First","description":"indicates if the current page is the first page"},"numberOfElements":{"type":"integer","title":"Numberofelements","description":"Number of records in the page"},"StatusCode":{"$ref":"#/components/schemas/StatusCode"}},"type":"object","required":["content","number","size","totalElements","last","totalPages","first","numberOfElements","StatusCode"],"title":"ERoamingEVSEData","description":"ERoamingEVSEData"},"ERoamingEVSEPricing":{"properties":{"EVSEPricing":{"items":{"$ref":"#/components/schemas/ERoamingEVSEPricingEVSEPricingInner"},"type":"array","title":"Evsepricing","description":"A list of EVSE pricing data blocks for specific operators"},"StatusCode":{"anyOf":[{"$ref":"#/components/schemas/StatusCode"},{"type":"null"}]}},"type":"object","required":["EVSEPricing"],"title":"ERoamingEVSEPricing","description":"eRoamingEVSEPricing is sent by the HBS in response to eRoamingPullEVSEPricing requests.  Note:   * This message describes the response which has to be sent in reply to the eRoamingPullEVSEPricing request. "},"ERoamingEVSEPricingEVSEPricingInner":{"properties":{"OperatorID":{"type":"string","title":"Operatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"OperatorName":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Operatorname","description":"Free text for operator"},"EVSEPricing":{"items":{"$ref":"#/components/schemas/ERoamingEVSEPricingEVSEPricingInnerEVSEPricingInner"},"type":"array","title":"Evsepricing","description":"List of EVSE pricings offered by the operator."}},"type":"object","required":["OperatorID","EVSEPricing"],"title":"ERoamingEVSEPricingEVSEPricingInner","description":"ERoamingEVSEPricingEVSEPricingInner"},"ERoamingEVSEPricingEVSEPricingInnerEVSEPricingInner":{"properties":{"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"EvseIDProductList":{"items":{"type":"string"},"type":"array","title":"Evseidproductlist","description":"A list of pricing products applicable per EvseID"}},"type":"object","required":["EvseID","ProviderID","EvseIDProductList"],"title":"ERoamingEVSEPricingEVSEPricingInnerEVSEPricingInner","description":"ERoamingEVSEPricingEVSEPricingInnerEVSEPricingInner"},"ERoamingGetChargeDetailRecords":{"properties":{"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"From":{"type":"string","format":"date-time","title":"From","description":"Start of the requested time range."},"To":{"type":"string","format":"date-time","title":"To","description":"End of the requested time range."},"SessionID":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Sessionid","description":"The Hubject SessionID that identifies the process"},"OperatorID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Operatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"CDRForwarder":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Cdrforwarder","description":"Indicates if the CDR was successfuly forwarded to the EMP or not."}},"type":"object","required":["ProviderID","From","To"],"title":"ERoamingGetChargeDetailRecords","description":"eRoamingGetChargeDetailRecords is a message to request a list of charge detail records.  Important: * This message is only mandatory for offline EMPs. "},"ERoamingPricingProductData":{"properties":{"PricingProductData":{"items":{"$ref":"#/components/schemas/ERoamingPricingProductDataPricingProductDataInner"},"type":"array","title":"Pricingproductdata","description":"List of pricing products offered by operators for a specific provider"},"StatusCode":{"anyOf":[{"$ref":"#/components/schemas/StatusCode"},{"type":"null"}]}},"type":"object","required":["PricingProductData"],"title":"ERoamingPricingProductData","description":"eRoamingPricingProductData is sent in response to eRoamingPullPricingProductData requests.  Note:   * This message describes the response which has to be sent in reply to the eRoamingPullPricingProductData request. "},"ERoamingPricingProductDataPricingProductDataInner":{"properties":{"OperatorID":{"type":"string","title":"Operatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"OperatorName":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Operatorname","description":"Free text for operator"},"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO”   In case the data is to be made available for all EMPs (e.g. for Offer-to-All prices), the asterix character (*) can be set as the value in this field.   "},"PricingDefaultPrice":{"anyOf":[{"type":"number"},{"type":"integer"}],"title":"Pricingdefaultprice","description":"A default price for pricing sessions at undefined EVSEs"},"PricingDefaultPriceCurrency":{"type":"string","title":"Pricingdefaultpricecurrency","description":"The ProductPriceCurrencyType allows for the list of active codes of the official ISO 4217 currency names.  For the full list of active codes of the official ISO 4217 currencies, see: [https://www.iso.org/iso-4217-currency-codes.html](https://www.iso.org/iso-4217-currency-codes.html)  Examples:  | Option | Description | | ------ | ----------- | | EUR | Euro | | CHF | Swiss franc | | CAD | Canadian Dollar | | GBP | Pound sterling "},"PricingDefaultReferenceUnit":{"type":"string","title":"Pricingdefaultreferenceunit","description":"Default Reference Unit in time or kWh  | Option | Description | | ------ | ----------- | | HOUR | Defined Reference Unit Type | | KILOWATT_HOUR | Defined Reference Unit Type | | MINUTE | Defined Reference Unit Type | "},"PricingProductDataRecords":{"items":{"$ref":"#/components/schemas/PricingProductDataRecord"},"type":"array","title":"Pricingproductdatarecords","description":"A list of pricing products"}},"type":"object","required":["OperatorID","ProviderID","PricingDefaultPrice","PricingDefaultPriceCurrency","PricingDefaultReferenceUnit","PricingProductDataRecords"],"title":"ERoamingPricingProductDataPricingProductDataInner","description":"ERoamingPricingProductDataPricingProductDataInner"},"ERoamingPullEVSEData":{"properties":{"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"SearchCenter":{"anyOf":[{"$ref":"#/components/schemas/ERoamingPullEVSEDataSearchCenter"},{"type":"null"}]},"LastCall":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Lastcall","description":"In case that this field is set, Hubject does not return the currently valid set of EVSE data but the changes compared to the status of EVSE data at the time of the last call. Cannot be combined with “SearchCenter”, “CountryCodes”, and “OperatorIDs”. "},"GeoCoordinatesResponseFormat":{"$ref":"#/components/schemas/GeoCoordinatesResponseFormat"},"CountryCodes":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Countrycodes","description":"A list of countries whose EVSE’s a provider wants to retrieve. Cannot be combined with “LastCall”."},"OperatorIds":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Operatorids","description":"A list of Operator Ids in ISO or DIN standard to download only EVSE’s of one or more operators. Cannot be combined with “LastCall”."},"AuthenticationModes":{"anyOf":[{"items":{"$ref":"#/components/schemas/AuthenticationMode"},"type":"array"},{"type":"null"}],"title":"Authenticationmodes","description":"A list of Authentication Modes to start a charging process"},"Accessibility":{"anyOf":[{"items":{"$ref":"#/components/schemas/Accessibility"},"type":"array"},{"type":"null"}],"title":"Accessibility","description":"A list of accessibility of the charging point"},"CalibrationLawDataAvailability":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Calibrationlawdataavailability","description":"A list of how caliration law data is provided by the charging point"},"RenewableEnergy":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Renewableenergy","description":"Select the charging stations use Renewable energy or not"},"IsHubjectCompatible":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Ishubjectcompatible","description":"Select if the charging station is Hubject Compatible"},"IsOpen24Hours":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Isopen24Hours","description":"Select the charging stations that are open 24 hours."}},"type":"object","required":["ProviderID","GeoCoordinatesResponseFormat"],"title":"ERoamingPullEVSEData","description":"eRoamingPullEVSEData is a message that is sent in order to request the download of EVSE data of operators stored on the Hubject system."},"ERoamingPullEVSEDataSearchCenter":{"properties":{"GeoCoordinates":{"$ref":"#/components/schemas/GeoCoordinates"},"Radius":{"anyOf":[{"type":"number"},{"type":"integer"}],"title":"Radius","description":"Radius in km around the position that is defined by the geo coordinates"}},"type":"object","required":["GeoCoordinates","Radius"],"title":"ERoamingPullEVSEDataSearchCenter","description":"\"The data can be restricted using search parameters that are provided in this field.  Cannot be combined with “LastCall”.\" "},"ERoamingPullEVSEPricing":{"properties":{"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"LastCall":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Lastcall","description":"In case that this field is set, Hubject does not return the entire set of currently valid pricing products data but just the changes that have taken places since the last call date/time value."},"OperatorIDs":{"items":{"type":"string"},"type":"array","title":"Operatorids","description":"A list of Operator Ids in ISO or DIN standard to download pricing data pushed by one or more operators."}},"type":"object","required":["ProviderID","OperatorIDs"],"title":"ERoamingPullEVSEPricing","description":"eRoamingPullEVSEPricing is a message that is sent in order to request the download of (i.e.pull) location/EVSE-specific pricing data uploaded by CPOs for the requesting EMP."},"ERoamingPullEVSEStatus-Input":{"properties":{"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"SearchCenter":{"anyOf":[{"$ref":"#/components/schemas/ERoamingPullEVSEStatusSearchCenter-Input"},{"type":"null"}]},"EVSEStatus":{"anyOf":[{"$ref":"#/components/schemas/EvseStatus"},{"type":"null"}]}},"type":"object","required":["ProviderID"],"title":"ERoamingPullEVSEStatus","description":"eRoamingPullEVSEStatus is a message that is sent in order to request the download of EVSE status data stored on the Hubject system  Tip:   * In case not all but a specific EVSE status is needed, Hubject offers the service eRoamingPullEVSEStatusByID and eRoamingPullEVSEStatusByOperatorID.   * We recommend a to send the request with a frequency from 1 to 5 minutes. "},"ERoamingPullEVSEStatus-Output":{"properties":{"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"SearchCenter":{"anyOf":[{"$ref":"#/components/schemas/ERoamingPullEVSEStatusSearchCenter-Output"},{"type":"null"}]},"EVSEStatus":{"anyOf":[{"$ref":"#/components/schemas/EvseStatus"},{"type":"null"}]}},"type":"object","required":["ProviderID"],"title":"ERoamingPullEVSEStatus","description":"eRoamingPullEVSEStatus is a message that is sent in order to request the download of EVSE status data stored on the Hubject system  Tip:   * In case not all but a specific EVSE status is needed, Hubject offers the service eRoamingPullEVSEStatusByID and eRoamingPullEVSEStatusByOperatorID.   * We recommend a to send the request with a frequency from 1 to 5 minutes. "},"ERoamingPullEVSEStatusByID":{"properties":{"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"EvseID":{"items":{"type":"string"},"type":"array","maxItems":100,"title":"Evseid"}},"type":"object","required":["ProviderID","EvseID"],"title":"ERoamingPullEVSEStatusByID","description":"eRoamingPullEVSEStatusByID is a message that is sent in order to request the EVSE status data for specific EVSE IDs. "},"ERoamingPullEVSEStatusByOperatorID":{"properties":{"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"OperatorID":{"items":{"type":"string"},"type":"array","title":"Operatorid"}},"type":"object","required":["ProviderID","OperatorID"],"title":"ERoamingPullEVSEStatusByOperatorID","description":"eRoamingPullEVSEStatusByOperatorID is a message that is sent in order to request the EVSE status data for specific OperatorsIDs (i.e. CPO(s) specific EVSE status data)."},"ERoamingPullEVSEStatusSearchCenter-Input":{"properties":{"GeoCoordinates":{"$ref":"#/components/schemas/GeoCoordinates"},"Radius":{"anyOf":[{"type":"number"},{"type":"integer"}],"title":"Radius","description":"Radius in km around the position that is defined by the geo coordinates"}},"type":"object","required":["GeoCoordinates","Radius"],"title":"ERoamingPullEVSEStatusSearchCenter","description":"The data can be restricted using search parameters that are provided in this field."},"ERoamingPullEVSEStatusSearchCenter-Output":{"properties":{"GeoCoordinates":{"$ref":"#/components/schemas/GeoCoordinates"},"Radius":{"anyOf":[{"type":"number"},{"type":"integer"}],"title":"Radius","description":"Radius in km around the position that is defined by the geo coordinates"}},"type":"object","required":["GeoCoordinates","Radius"],"title":"ERoamingPullEVSEStatusSearchCenter","description":"The data can be restricted using search parameters that are provided in this field."},"ERoamingPullPricingProductData":{"properties":{"LastCall":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Lastcall","description":"In case that this field is set, Hubject does not return the entire set of currently valid pricing products data but just the changes that have taken places since the last call date/time value."},"OperatorIDs":{"items":{"type":"string"},"type":"array","title":"Operatorids","description":"A list of Operator Ids in ISO or DIN standard to download pricing data pushed by one or more operators."}},"type":"object","required":["OperatorIDs"],"title":"ERoamingPullPricingProductData","description":"eRoamingPullPricingProductData is a message that is sent in order to request the download of pricing data available in the HBS for an EMP."},"ERoamingPushAuthenticationData":{"properties":{"ActionType":{"type":"string","title":"Actiontype","description":"Describes the action that has to be performed by Hubject with the provided data."},"ProviderAuthenticationData":{"$ref":"#/components/schemas/ProviderAuthenticationData"}},"type":"object","required":["ActionType","ProviderAuthenticationData"],"title":"ERoamingPushAuthenticationData","description":"eRoamingPushAuthenticationData is a message that is sent in order to upload authentication data to Hubject.  Note: * This message is only for EMPs onboarded to the Hubject platform as offline EMPs. "},"EnergySource":{"properties":{"Energy":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Energy","description":"| Option | Description | | Solar | Energy coming from Solar radiation | | Wind | Energy produced by wind | | HydroPower | Energy produced by the movement of water | | GeothermalEnergy | Energy coming from the sub-surface of the earth | | Biomass | Energy produced using plant or animal material as fuel | | Coal | Energy produced using coal as fuel | | NuclearEnergy | Energy being produced by nuclear fission | | Petroleum | Energy produced by using Petroleum as fuel | | NaturalGas | Energy produced using Natural Gas as fuel | "},"Percentage":{"anyOf":[{"type":"integer","maximum":99.0,"minimum":0.0},{"type":"null"}],"title":"Percentage","description":"Percentage of EnergyType being used by the charging stations"}},"type":"object","title":"EnergySource","description":"energy source that the charging station uses to supply electric energy"},"EvseStatus":{"type":"string","enum":["Available","Reserved","Occupied","OutOfService","EvseNotFound","Unknown"],"title":"EvseStatus","description":"| Option | Description |                 | ------ | ----------- | | Available | Charging Spot is available for charging. | | Reserved | Charging Spot is reserved and not available for charging. | | Occupied | Charging Spot is busy. | | OutOfService | Charging Spot is out of service and not available for charging. | | EvseNotFound | The requested EvseID and EVSE status does not exist within the Hubject database. | | Unknown | No status information available. | "},"GeoCoordinates":{"properties":{"Google":{"anyOf":[{"$ref":"#/components/schemas/GeoCoordinatesGoogle"},{"type":"null"}]},"DecimalDegree":{"anyOf":[{"$ref":"#/components/schemas/GeoCoordinatesDecimalDegree"},{"type":"null"}]},"DegreeMinuteSeconds":{"anyOf":[{"$ref":"#/components/schemas/GeoCoordinatesDegreeMinuteSeconds"},{"type":"null"}]}},"type":"object","title":"GeoCoordinates","description":"Important  __One of the following three options `MUST` be provided__ "},"GeoCoordinatesDecimalDegree":{"properties":{"Longitude":{"type":"string","title":"Longitude","description":"A string that `MUST` be valid with respect to the following regular expression:  `^-?1?\\d{1,2}\\.\\d{1,6}$` The expression validates the string as a geo coordinate (longitude or latitude) with decimal degree syntax.  Examples: “9.360922”, “-21.568201” "},"Latitude":{"type":"string","title":"Latitude","description":"A string that `MUST` be valid with respect to the following regular expression:  `^-?1?\\d{1,2}\\.\\d{1,6}$` The expression validates the string as a geo coordinate (longitude or latitude) with decimal degree syntax.  Examples: “9.360922”, “-21.568201” "}},"type":"object","required":["Longitude","Latitude"],"title":"GeoCoordinatesDecimalDegree","description":"Geocoordinates using DecimalDegree Structure"},"GeoCoordinatesDegreeMinuteSeconds":{"properties":{"Longitude":{"type":"string","title":"Longitude","description":"A string that `MUST` be valid with respect to the following regular expression:  `^-?1?\\d{1,2}°[ ]?\\d{1,2}'[ ]?\\d{1,2}\\.\\d+''$` The expression validates the string as a geo coordinate (longitude or latitude) consisting of degree, minutes, and seconds  Examples: “9°21'39.32''”, “-21°34'23.16'' "},"Latitude":{"type":"string","title":"Latitude","description":"A string that `MUST` be valid with respect to the following regular expression:  `^-?1?\\d{1,2}°[ ]?\\d{1,2}'[ ]?\\d{1,2}\\.\\d+''$` The expression validates the string as a geo coordinate (longitude or latitude) consisting of degree, minutes, and seconds  Examples: “9°21'39.32''”, “-21°34'23.16'' "}},"type":"object","required":["Longitude","Latitude"],"title":"GeoCoordinatesDegreeMinuteSeconds","description":"Geocoordinates using DegreeMinutesSeconds Structure"},"GeoCoordinatesGoogle":{"properties":{"Coordinates":{"type":"string","title":"Coordinates","description":"A string that `MUST` be valid with respect to the following regular expression:  `^-?1?\\d{1,2}\\.\\d{1,6}\\s*\\,?\\s*-?1?\\d{1,2}\\.\\d{1,6}$` The expression validates the string as geo coordinates with respect to the Google standard. The string contains latitude and longitude (in this sequence) separated by a space.  Example: “47.662249 9.360922” "}},"type":"object","required":["Coordinates"],"title":"GeoCoordinatesGoogle","description":"Geocoordinates using Google Structure Based on WGS84 "},"GeoCoordinatesResponseFormat":{"type":"string","enum":["Google","DegreeMinuteSeconds","DecimalDegree"],"title":"GeoCoordinatesResponseFormat","description":"Defines the format of geo coordinates that shall be provided with the response."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Identification-Input":{"properties":{"RFIDMifareFamilyIdentification":{"anyOf":[{"$ref":"#/components/schemas/RFIDMifareFamilyIdentification"},{"type":"null"}]},"RFIDIdentification":{"anyOf":[{"$ref":"#/components/schemas/RFIDIdentification"},{"type":"null"}]},"QRCodeIdentification":{"anyOf":[{"$ref":"#/components/schemas/QRCodeIdentification-Input"},{"type":"null"}]},"PlugAndChargeIdentification":{"anyOf":[{"$ref":"#/components/schemas/PlugAndChargeIdentification"},{"type":"null"}]},"RemoteIdentification":{"anyOf":[{"$ref":"#/components/schemas/RemoteIdentification"},{"type":"null"}]}},"type":"object","title":"Identification","description":"Authentication data  1. The option RFIDIdentification `MUST` not be used in the eRoamingAuthorization process. For RFID Authorization, only the option RFIDMifareFamilyIdentification `SHOULD` be used in the respective eRoamingAuthorization messages. 2. For the Remote Authorization process, only the option RemoteIdentification MUST be used in the respective messages. "},"Identification-Output":{"properties":{"RFIDMifareFamilyIdentification":{"anyOf":[{"$ref":"#/components/schemas/RFIDMifareFamilyIdentification"},{"type":"null"}]},"RFIDIdentification":{"anyOf":[{"$ref":"#/components/schemas/RFIDIdentification"},{"type":"null"}]},"QRCodeIdentification":{"anyOf":[{"$ref":"#/components/schemas/QRCodeIdentification-Output"},{"type":"null"}]},"PlugAndChargeIdentification":{"anyOf":[{"$ref":"#/components/schemas/PlugAndChargeIdentification"},{"type":"null"}]},"RemoteIdentification":{"anyOf":[{"$ref":"#/components/schemas/RemoteIdentification"},{"type":"null"}]}},"type":"object","title":"Identification","description":"Authentication data  1. The option RFIDIdentification `MUST` not be used in the eRoamingAuthorization process. For RFID Authorization, only the option RFIDMifareFamilyIdentification `SHOULD` be used in the respective eRoamingAuthorization messages. 2. For the Remote Authorization process, only the option RemoteIdentification MUST be used in the respective messages. "},"InfoTextType":{"properties":{"lang":{"type":"string","title":"Lang","description":"`^[a-z]{2,3}(?:-[A-Z]{2,3}(?:-[a-zA-Z]{4})?)?(?:-x-[a-zA-Z0-9]{1,8})?$`  The language in which the additional info text is provided  The expression validates the string as a language code as per ISO-639-1 or ISO-639-2/T  The LanguageCodeType is used in the AdditionalInfo field, which is part of the EvseDataRecordType. "},"value":{"type":"string","title":"Value","description":"The Additional Info text"}},"type":"object","required":["lang","value"],"title":"InfoTextType","description":"InfoTextType"},"OpeningTimes":{"properties":{"Period":{"items":{"$ref":"#/components/schemas/OpeningTimesPeriodInner"},"type":"array","title":"Period","description":"The starting and end time for pricing product applicability in the specified period "},"on":{"type":"string","title":"On","description":"Day values to be used in specifying periods on which the product is available. Workdays = Monday – Friday, Weekend = Saturday – Sunday"}},"type":"object","required":["Period","on"],"title":"OpeningTimes","description":"OpeningTimes"},"OpeningTimesPeriodInner":{"properties":{"begin":{"type":"string","title":"Begin","description":"The opening time"},"end":{"type":"string","title":"End","description":"The closing time"}},"type":"object","required":["begin","end"],"title":"OpeningTimesPeriodInner","description":"OpeningTimesPeriodInner"},"PaymentOption":{"type":"string","enum":["No Payment","Direct","Contract"],"title":"PaymentOption","description":"| Option | Description | | ------ | ----------- | | No payment | Free. | | Direct | e. g. Cash, Card, SMS, ... | | Contract | i. e. Subscription  |  Note  `No Payment` can not be combined with other payment option "},"Plug":{"type":"string","enum":["Small Paddle Inductive","Large Paddle Inductive","AVCON Connector","Tesla Connector","NEMA 5-20","Type E French Standard","Type F Schuko","Type G British Standard","Type J Swiss Standard","Type 1 Connector (Cable Attached)","Type 2 Outlet","Type 2 Connector (Cable Attached)","Type 3 Outlet","IEC 60309 Single Phase","IEC 60309 Three Phase","CCS Combo 2 Plug (Cable Attached)","CCS Combo 1 Plug (Cable Attached)","CHAdeMO"],"title":"Plug","description":"| Option | Description | |Small Paddle Inductive | Defined plug type. | | Large Paddle Inductive | Defined plug type.| | AVCON Connector | Defined plug type.| | Tesla Connector | Defined plug type.| | NEMA 5-20 | Defined plug type.| | Type E French Standard | CEE 7/5. | | Type F Schuko | CEE 7/4. | | Type G British Standard | BS 1363. | | Type J Swiss Standard | SEV 1011. | | Type 1 Connector (Cable Attached) | Cable attached to IEC 62196-1 type 1, SAE J1772 connector. | | Type 2 Outlet | IEC 62196-1 type 2. | | Type 2 Connector (Cable Attached) | Cable attached to IEC 62196-1 type 2 connector. | | Type 3 Outlet | IEC 62196-1 type 3. | | IEC 60309 Single Phase | IEC 60309. | | IEC 60309 Three Phase | IEC 60309. | | CCS Combo 2 Plug (Cable Attached) | IEC 62196-3 CDV DC Combined Charging Connector DIN SPEC 70121 refers to ISO / IEC 15118-1 DIS, -2 DIS and 15118-3. | | CCS Combo 1 Plug (Cable Attached) | IEC 62196-3 CDV DC Combined Charging Connector with IEC 62196-1 type 2 SAE J1772 connector. | | CHAdeMO | DC CHAdeMO Connector. | "},"PlugAndChargeIdentification":{"properties":{"EvcoID":{"type":"string","title":"Evcoid","description":"A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  ^(([A-Za-z]{2}\\-?[A-Za-z0-9]{3}\\-?C[A-Za-z0-9]{8}\\-?[\\d|A-Za-z])|([A-Za-z]{2}[\\*|\\-]?[A-Za-z0-9]{3}[\\*|\\-]?[A-Za-z0-9]{6}[\\*|\\-]?[\\d|X]))$ The expression validates the string as EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvcoID is provided corresponding to ISO, the instance part MUST be eight characters long and MUST be provided with a prepended “C”. The optional separating character MUST be “-“.  In case the EvcoID is provided corresponding to DIN, the instance part MUST be six characters long. The optional separating character can either be “*” or “-“.  Examples ISO: “DE-8EO-CAet5e4XY-3”, “DE8EOCAet5e43X1”  Examples DIN: “DE*8EO*Aet5e4*3”, “DE-8EO-Aet5e4-3”, “DE8EOAet5e43” "}},"type":"object","required":["EvcoID"],"title":"PlugAndChargeIdentification","description":"Authentication required for Plug&Charge (EMAID/EVCOID) "},"PricingProductDataRecord":{"properties":{"ProductID":{"type":"string","title":"Productid","description":"The ProductIDType defines some standard values (see below). The type however also supports custom ProductIDs that can be specified by partners (as a string of 50 characters maximum length). | Option | Description | |--------|-------------| | Standard Price | Standard Price | | AC1 | Product for AC 1 Phase charging | | AC3 | Product for AC 3 Phase charging | | DC | Product for DC charging | | CustomProductID | There is no option “CustomProductID”, this sample option is meant to indicates that custom product ID specifications by partners (as a string of 50 characters maximum length) are allowed as well.| "},"ReferenceUnit":{"type":"string","title":"Referenceunit","description":"Default Reference Unit in time or kWh  | Option | Description | | ------ | ----------- | | HOUR | Defined Reference Unit Type | | KILOWATT_HOUR | Defined Reference Unit Type | | MINUTE | Defined Reference Unit Type | "},"ProductPriceCurrency":{"type":"string","title":"Productpricecurrency","description":"The ProductPriceCurrencyType allows for the list of active codes of the official ISO 4217 currency names.  For the full list of active codes of the official ISO 4217 currencies, see: [https://www.iso.org/iso-4217-currency-codes.html](https://www.iso.org/iso-4217-currency-codes.html)  Examples:  | Option | Description | | ------ | ----------- | | EUR | Euro | | CHF | Swiss franc | | CAD | Canadian Dollar | | GBP | Pound sterling "},"PricePerReferenceUnit":{"anyOf":[{"type":"number"},{"type":"integer"}],"title":"Priceperreferenceunit","description":"A price per reference unit"},"MaximumProductChargingPower":{"anyOf":[{"type":"number"},{"type":"integer"}],"title":"Maximumproductchargingpower","description":"A value in kWh"},"IsValid24hours":{"type":"boolean","title":"Isvalid24Hours","description":"Set to TRUE if the respective pricing product is applicable 24 hours a day. If FALSE, the respective applicability times `SHOULD` be provided in the field “ProductAvailabilityTimes”. "},"ProductAvailabilityTimes":{"items":{"$ref":"#/components/schemas/PricingProductDataRecordProductAvailabilityTimesInner"},"type":"array","title":"Productavailabilitytimes","description":"A list indicating when the pricing product is applicable"},"AdditionalReferences":{"anyOf":[{"items":{"$ref":"#/components/schemas/PricingProductDataRecordAdditionalReferencesInner"},"type":"array"},{"type":"null"}],"title":"Additionalreferences","description":"A list of additional reference units and their respective prices"}},"type":"object","required":["ProductID","ReferenceUnit","ProductPriceCurrency","PricePerReferenceUnit","MaximumProductChargingPower","IsValid24hours","ProductAvailabilityTimes"],"title":"PricingProductDataRecord","description":"PricingProductDataRecord"},"PricingProductDataRecordAdditionalReferencesInner":{"properties":{"AdditionalReference":{"type":"string","title":"Additionalreference","description":"Additional pricing components to be considered in addition to the base pricing  | Option | Description | | ------ | ----------- | | START FEE | Can be used in case a fixed fee is charged for the initiation of the charging session. This is a fee charged on top of the main base price defined in the field \"PricePerReferenceUnit\" for any particular pricing product. | | FIXED FEE | Can be used if a single price is charged irrespective of charging duration or energy consumption (for instance if all sessions are to be charged a single fixed fee). When used, the value set in the field \"PricePerReferenceUnit\" for the main base price of respective pricing product SHOULD be set to zero. | | PARKING FEE | Can be used in case sessions are to be charged for both parking and charging. When used, it needs to be specified in the corresponding service offer on the HBS Portal when parking applies (e.g. from session start to charging start and charging end to session end or for the entire session duration, or x-minutes after charging end, etc) | | MINIMUM FEE | Can be used in case there is a minimum fee to be paid for all charging sessions. When used, this implies that the eventual price to be paid cannot be less than this minimum fee but can however be a price above/greater than the minimum fee. | | MAXIMUM FEE | Can be used in case there is a maximum fee to be charged for all charging sessions. When used, this implies that the eventual price to be paid cannot be more than this maximum fee but can however be a price below/lower than the maximum fee. | "},"AdditionalReferenceUnit":{"type":"string","title":"Additionalreferenceunit","description":"Default Reference Unit in time or kWh  | Option | Description | | ------ | ----------- | | HOUR | Defined Reference Unit Type | | KILOWATT_HOUR | Defined Reference Unit Type | | MINUTE | Defined Reference Unit Type | "},"PricePerAdditionalReferenceUnit":{"anyOf":[{"type":"number"},{"type":"integer"}],"title":"Priceperadditionalreferenceunit","description":"A price in the given currency"}},"type":"object","required":["AdditionalReference","AdditionalReferenceUnit","PricePerAdditionalReferenceUnit"],"title":"PricingProductDataRecordAdditionalReferencesInner","description":"PricingProductDataRecordAdditionalReferencesInner"},"PricingProductDataRecordProductAvailabilityTimesInner":{"properties":{"Periods":{"items":{"$ref":"#/components/schemas/PricingProductDataRecordProductAvailabilityTimesInnerPeriodsInner"},"type":"array","title":"Periods"},"on":{"type":"string","title":"On","description":"Day values to be used in specifying periods on which the product is available. Workdays = Monday – Friday, Weekend = Saturday – Sunday"}},"type":"object","required":["Periods","on"],"title":"PricingProductDataRecordProductAvailabilityTimesInner","description":"PricingProductDataRecordProductAvailabilityTimesInner"},"PricingProductDataRecordProductAvailabilityTimesInnerPeriodsInner":{"properties":{"begin":{"type":"string","title":"Begin","description":"The opening time"},"end":{"type":"string","title":"End","description":"The closing time"}},"type":"object","required":["begin","end"],"title":"PricingProductDataRecordProductAvailabilityTimesInnerPeriodsInner","description":"The starting and end time for pricing product applicability in the specified period "},"ProviderAuthenticationData":{"properties":{"ProviderID":{"type":"string","title":"Providerid","description":"The ProviderID is defined by Hubject and is used to identify the EMP  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN  `^([A-Za-z]{2}\\-?[A-Za-z0-9]{3}|[A-Za-z]{2}[\\*|-]?[A-Za-z0-9]{3})$`  The expression validates the string as ProviderID including the preceding country code, which is part of EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the ProviderID is provided corresponding to ISO, the country code `MUST` be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “-” is optional.  Examples ISO: “DE8EO”, “DE-8EO”  Examples DIN: “DE8EO”, “DE*8EO”, “DE-8EO” "},"AuthenticationDataRecord":{"items":{"$ref":"#/components/schemas/ProviderAuthenticationDataAuthenticationDataRecordInner"},"type":"array","title":"Authenticationdatarecord"}},"type":"object","required":["ProviderID","AuthenticationDataRecord"],"title":"ProviderAuthenticationData","description":"ProviderAuthenticationData"},"ProviderAuthenticationDataAuthenticationDataRecordInner":{"properties":{"Identification":{"$ref":"#/components/schemas/Identification-Input"}},"type":"object","required":["Identification"],"title":"ProviderAuthenticationDataAuthenticationDataRecordInner","description":"ProviderAuthenticationDataAuthenticationDataRecordInner"},"PullEvseDataRecord":{"properties":{"deltaType":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Deltatype","description":"In case that the operation “PullEvseData” is performed with the parameter “LastCall”, Hubject assigns this attribute to every response EVSE record in order to return the changes compared to the last call."},"lastUpdate":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Lastupdate","description":"The attribute indicates the date and time of the last update of the record. Hubject assigns this attribute to every response EVSE record."},"EvseID":{"type":"string","title":"Evseid","description":"The ID that identifies the charging spot.  A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  `^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?E[A-Za-z0-9\\*]{1,30})|(\\+?[0-9]{1,3}\\*[0-9]{3}\\*[0-9\\*]{1,32}))$` The expression validates the string as EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvseID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional. Furthermore the ID MUST provide an “E” after the OperatorID in order to identify the ID as ISO EvseID without doubt.  In case the EvseID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*AB7*E840*6487”, “DEAB7E8406487”  Example DIN: “+49*810*000*438” "},"ChargingPoolID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Chargingpoolid","description":"VSEs may be grouped by using a charging pool id according to emi³ standard definition. The Evse Pool ID MUST match the following structure (the notation corresponds to the augmented Backus-Naur Form (ABNF) as defined in RFC5234): <Evse Pool ID> = <Country Code> <S> <Spot Operator ID> <S> <ID Type> <Pool ID>  with:  <Country Code> = 2 ALPHA ; two character country code according to ISO-3166-1 (Alpha-2-Code).  <Spot Operator ID> = 3 (ALPHA / DIGIT); three alphanumeric characters.  <ID Type> = “P”; one character “P” indicating that this ID represents a “Pool”.  <Pool Instance> = (ALPHA / DIGIT) 1 * 30 ( 1*(ALPHA / DIGIT) [/ <S>] ); between 1 and 31sequence of alphanumeric characters, including additional optional separators. Starts with alphanumeric character referring to a specific Pool in EVSE Operator data system.  ALPHA = %x41-5A / %x61-7A; according to RFC 5234 (7-Bit ASCII).  DIGIT = %x30-39; according to RFC 5234 (7-Bit ASCII).  <S> = *1 ( “*” ); optional separator  An example for a valid Evse Pool ID is “IT*123*P456*AB789” with :  “IT” indicating Italy,  “123” representing a particular Spot Operator,  “P” indicating the Pool, and  “456*AB789” representing one of its POOL.  Note  In contrast to the eMA ID, no check digit is specified for the Evse Pool ID in this document. Alpha characters SHALL be interpreted case insensitively. emi³ strongly recommends that implementations SHOULD - use the separator between Country Code and Spot Operator ID - use the separator between Spot Operator ID and ID type This leads to the following regular expression:  `([A-Za-z]{2}\\*?[A-Za-z0-9]{3}\\*?P[A-Za-z0-9\\*]{1,30})`  This regular expression is similar to that of the ISO EvseIDType but E is replaced with P to indicate a pool. "},"ChargingStationId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Chargingstationid","description":"The ID that identifies the charging station."},"ChargingStationNames":{"items":{"$ref":"#/components/schemas/InfoTextType"},"type":"array","title":"Chargingstationnames","description":"Name of the charging station"},"HardwareManufacturer":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Hardwaremanufacturer","description":"Name of the charging point manufacturer"},"ChargingStationImage":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Chargingstationimage","description":"URL that redirect to an online image of the related EVSEID"},"SubOperatorName":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Suboperatorname","description":"Name of the Sub Operator owning the Charging Station"},"Address":{"$ref":"#/components/schemas/AddressIso19773"},"GeoCoordinates":{"$ref":"#/components/schemas/GeoCoordinates"},"Plugs":{"items":{"$ref":"#/components/schemas/Plug"},"type":"array","title":"Plugs","description":"List of plugs that are supported."},"DynamicPowerLevel":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Dynamicpowerlevel","description":"Informs is able to deliver different power outputs."},"ChargingFacilities":{"items":{"$ref":"#/components/schemas/ChargingFacility"},"type":"array","title":"Chargingfacilities","description":"List of facilities that are supported."},"RenewableEnergy":{"type":"boolean","title":"Renewableenergy","description":"If the Charging Station provides only renewable energy then the value `MUST` be ”true”, if it use grey energy then value `MUST` be “false”. "},"EnergySource":{"anyOf":[{"items":{"$ref":"#/components/schemas/EnergySource"},"type":"array"},{"type":"null"}],"title":"Energysource","description":"List of energy source that the charging station uses to supply electric energy."},"EnvironmentalImpact":{"anyOf":[{"$ref":"#/components/schemas/PullEvseDataRecordEnvironmentalImpact"},{"type":"null"}]},"CalibrationLawDataAvailability":{"type":"string","title":"Calibrationlawdataavailability","description":"| Option | Description | | Local | Calibration law data is shown at the charging station. | | External | Calibration law data is provided externaly. | | Not Available | Calibration law data is not provided. | "},"AuthenticationModes":{"items":{"$ref":"#/components/schemas/AuthenticationMode"},"type":"array","title":"Authenticationmodes","description":"List of authentication modes that are supported."},"MaxCapacity":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Maxcapacity","description":"This field is used if the EVSE has a limited capacity (e.g. built-in battery). Values must be given in kWh."},"PaymentOptions":{"items":{"$ref":"#/components/schemas/PaymentOption"},"type":"array","title":"Paymentoptions","description":"List of payment options that are supported."},"ValueAddedServices":{"items":{"$ref":"#/components/schemas/ValueAddedService"},"type":"array","title":"Valueaddedservices","description":"List of value added services that are supported."},"Accessibility":{"$ref":"#/components/schemas/Accessibility"},"AccessibilityLocation":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Accessibilitylocation","description":"| Option | Description | | ------ | ----------- | | OnStreet | The charging station is located on the street| | ParkingLot | The Charging Point is located inside a Parking Lot| | ParkingGarage | The Charging Point is located inside a Parking Garage| | UndergroundParkingGarage | The Charging Point is located inside an Underground Parking Garage | "},"HotlinePhoneNumber":{"type":"string","title":"Hotlinephonenumber","description":"`^\\+[0-9]{5,15}$` The expression validates the string as a telephone number starting with “+” and containing only numbers.  Example: “+0305132787” "},"AdditionalInfo":{"anyOf":[{"items":{"$ref":"#/components/schemas/InfoTextType"},"type":"array"},{"type":"null"}],"title":"Additionalinfo","description":"Optional information."},"ChargingStationLocationReference":{"anyOf":[{"items":{"$ref":"#/components/schemas/InfoTextType"},"type":"array"},{"type":"null"}],"title":"Chargingstationlocationreference","description":"Inform the EV driver where the ChargingPoint could be accessed."},"GeoChargingPointEntrance":{"anyOf":[{"$ref":"#/components/schemas/GeoCoordinates"},{"type":"null"}]},"IsOpen24Hours":{"type":"boolean","title":"Isopen24Hours","description":"Set in case the charging spot is open 24 hours."},"OpeningTimes":{"anyOf":[{"items":{"$ref":"#/components/schemas/OpeningTimes"},"type":"array"},{"type":"null"}],"title":"Openingtimes","description":"Opening time in case that the charging station cannot be accessed around the clock."},"HubOperatorID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Huboperatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"ClearinghouseID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Clearinghouseid","description":"Identification of the corresponding clearing house in the event that roaming between different clearing houses `MUST` be processed in the future. "},"IsHubjectCompatible":{"type":"boolean","title":"Ishubjectcompatible","description":"Is eRoaming via intercharge at this charging station possible? If set to \"false\" the charge spot will not be started/stopped remotely via Hubject."},"DynamicInfoAvailable":{"type":"string","title":"Dynamicinfoavailable","description":"Values: true / false / auto This attribute indicates whether a CPO provides (dynamic) EVSE Status info in addition to the (static) EVSE Data for this EVSERecord. Value auto is set to true by Hubject if the operator offers Hubject EVSEStatus data."},"OperatorID":{"type":"string","title":"Operatorid","description":"A string that MUST be valid with respect to the following regular expression: ISO | DIN  ^(([A-Za-z]{2}\\*?[A-Za-z0-9]{3})|(\\+?[0-9]{1,3}\\*[0-9]{3}))$ The expression validates the string as OperatorID including the preceding country code, which is part of EvseID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118. In case the OperatorID is provided corresponding to ISO, the country code MUST be provided as Alpha-2-Code (DIN EN ISO-3166-1) and the separator character “*” is optional.  In case the OperatorID is provided corresponding to DIN, the country code MUST be provided according to the international telecommunication numbering plan (ITU-T E.164:11/2010) and the separator character “*” is mandatory.  Examples ISO: “DE*A36”, “DEA36”  Example DIN: “+49*536” "},"OperatorName":{"type":"string","title":"Operatorname","description":"Free text for operator"}},"type":"object","required":["EvseID","ChargingStationNames","Address","GeoCoordinates","Plugs","ChargingFacilities","RenewableEnergy","CalibrationLawDataAvailability","AuthenticationModes","PaymentOptions","ValueAddedServices","Accessibility","HotlinePhoneNumber","IsOpen24Hours","IsHubjectCompatible","DynamicInfoAvailable","OperatorID","OperatorName"],"title":"PullEvseDataRecord","description":"PullEvseDataRecord"},"PullEvseDataRecordEnvironmentalImpact":{"properties":{"CO2Emission":{"anyOf":[{"type":"number","maximum":99999.0},{"type":"integer","maximum":99999.0},{"type":"null"}],"title":"Co2Emission","description":"Total CO2 emited by the energy source being used by this charging station to supply energy to EV. Units are in g/kWh"},"NuclearWaste":{"anyOf":[{"type":"number","maximum":99999.0},{"type":"integer","maximum":99999.0},{"type":"null"}],"title":"Nuclearwaste","description":"Total NuclearWaste emited by the energy source being used by this charging station to supply energy to EV. Units are in g/kWh"}},"type":"object","title":"PullEvseDataRecordEnvironmentalImpact","description":"PullEvseDataRecordEnvironmentalImpact"},"QRCodeIdentification-Input":{"properties":{"EvcoID":{"type":"string","title":"Evcoid","description":"A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  ^(([A-Za-z]{2}\\-?[A-Za-z0-9]{3}\\-?C[A-Za-z0-9]{8}\\-?[\\d|A-Za-z])|([A-Za-z]{2}[\\*|\\-]?[A-Za-z0-9]{3}[\\*|\\-]?[A-Za-z0-9]{6}[\\*|\\-]?[\\d|X]))$ The expression validates the string as EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvcoID is provided corresponding to ISO, the instance part MUST be eight characters long and MUST be provided with a prepended “C”. The optional separating character MUST be “-“.  In case the EvcoID is provided corresponding to DIN, the instance part MUST be six characters long. The optional separating character can either be “*” or “-“.  Examples ISO: “DE-8EO-CAet5e4XY-3”, “DE8EOCAet5e43X1”  Examples DIN: “DE*8EO*Aet5e4*3”, “DE-8EO-Aet5e4-3”, “DE8EOAet5e43” "},"HashedPIN":{"anyOf":[{"$ref":"#/components/schemas/QRCodeIdentificationHashedPIN"},{"type":"null"}]},"PIN":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Pin"}},"type":"object","required":["EvcoID"],"title":"QRCodeIdentification","description":"QRCodeIdentification"},"QRCodeIdentification-Output":{"properties":{"EvcoID":{"type":"string","title":"Evcoid","description":"A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  ^(([A-Za-z]{2}\\-?[A-Za-z0-9]{3}\\-?C[A-Za-z0-9]{8}\\-?[\\d|A-Za-z])|([A-Za-z]{2}[\\*|\\-]?[A-Za-z0-9]{3}[\\*|\\-]?[A-Za-z0-9]{6}[\\*|\\-]?[\\d|X]))$ The expression validates the string as EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvcoID is provided corresponding to ISO, the instance part MUST be eight characters long and MUST be provided with a prepended “C”. The optional separating character MUST be “-“.  In case the EvcoID is provided corresponding to DIN, the instance part MUST be six characters long. The optional separating character can either be “*” or “-“.  Examples ISO: “DE-8EO-CAet5e4XY-3”, “DE8EOCAet5e43X1”  Examples DIN: “DE*8EO*Aet5e4*3”, “DE-8EO-Aet5e4-3”, “DE8EOAet5e43” "},"HashedPIN":{"anyOf":[{"$ref":"#/components/schemas/QRCodeIdentificationHashedPIN"},{"type":"null"}]},"PIN":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Pin"}},"type":"object","required":["EvcoID"],"title":"QRCodeIdentification","description":"QRCodeIdentification"},"QRCodeIdentificationHashedPIN":{"properties":{"Value":{"type":"string","title":"Value","description":"Hash value created by partner  The expression validates the string as a hash function result value with a length between 10 and 100 characters  Example: “a5ghdhf73h” "},"Function":{"type":"string","title":"Function","description":"Function that was used to generate the hash value."},"LegacyHashData":{"anyOf":[{"$ref":"#/components/schemas/QRCodeIdentificationHashedPINLegacyHashData"},{"type":"null"}]}},"type":"object","required":["Value","Function"],"title":"QRCodeIdentificationHashedPIN","description":"QRCodeIdentificationHashedPIN"},"QRCodeIdentificationHashedPINLegacyHashData":{"properties":{"Function":{"type":"string","title":"Function","description":"Function used for hashing of the PIN at the partner."},"Salt":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Salt","description":"The salt value used by the partner for hashing the PIN."},"Value":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Value","description":"PIN hash at the partner."}},"type":"object","required":["Function"],"title":"QRCodeIdentificationHashedPINLegacyHashData","description":"QRCodeIdentificationHashedPINLegacyHashData"},"RFIDIdentification":{"properties":{"UID":{"type":"string","title":"Uid","description":"Authentication data details. The data structure differs depending on the authentication technology  The expression validates the string as a unique RFID with a length of 8, 14 or 20 characters.  Examples: “7568290FFF765F” "},"EvcoID":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Evcoid","description":"A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  ^(([A-Za-z]{2}\\-?[A-Za-z0-9]{3}\\-?C[A-Za-z0-9]{8}\\-?[\\d|A-Za-z])|([A-Za-z]{2}[\\*|\\-]?[A-Za-z0-9]{3}[\\*|\\-]?[A-Za-z0-9]{6}[\\*|\\-]?[\\d|X]))$ The expression validates the string as EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvcoID is provided corresponding to ISO, the instance part MUST be eight characters long and MUST be provided with a prepended “C”. The optional separating character MUST be “-“.  In case the EvcoID is provided corresponding to DIN, the instance part MUST be six characters long. The optional separating character can either be “*” or “-“.  Examples ISO: “DE-8EO-CAet5e4XY-3”, “DE8EOCAet5e43X1”  Examples DIN: “DE*8EO*Aet5e4*3”, “DE-8EO-Aet5e4-3”, “DE8EOAet5e43” "},"RFID":{"type":"string","title":"Rfid","description":"Defined RFID Type "},"PrintedNumber":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Printednumber","description":"A number printed on a customer’s card for manual authorization (e.q. via a call center)"},"ExpiryDate":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Expirydate","description":"Until when this card is valid. Should not be set if card does not have an expiration"}},"type":"object","required":["UID","RFID"],"title":"RFIDIdentification","description":"Authentication data details. The data structure differs depending on the authentication technology "},"RFIDMifareFamilyIdentification":{"properties":{"UID":{"type":"string","title":"Uid","description":"Authentication data details. The data structure differs depending on the authentication technology  The expression validates the string as a unique RFID with a length of 8, 14 or 20 characters.  Examples: “7568290FFF765F” "}},"type":"object","required":["UID"],"title":"RFIDMifareFamilyIdentification","description":"Authentication data details. The data structure differs depending on the authentication technology "},"RemoteIdentification":{"properties":{"EvcoID":{"type":"string","title":"Evcoid","description":"A string that `MUST` be valid with respect to the following regular expression: ISO | DIN.  ^(([A-Za-z]{2}\\-?[A-Za-z0-9]{3}\\-?C[A-Za-z0-9]{8}\\-?[\\d|A-Za-z])|([A-Za-z]{2}[\\*|\\-]?[A-Za-z0-9]{3}[\\*|\\-]?[A-Za-z0-9]{6}[\\*|\\-]?[\\d|X]))$ The expression validates the string as EvcoID. It supports both definitions DIN SPEC 91286:2011-11 as well as ISO 15118-1.  In case the EvcoID is provided corresponding to ISO, the instance part MUST be eight characters long and MUST be provided with a prepended “C”. The optional separating character MUST be “-“.  In case the EvcoID is provided corresponding to DIN, the instance part MUST be six characters long. The optional separating character can either be “*” or “-“.  Examples ISO: “DE-8EO-CAet5e4XY-3”, “DE8EOCAet5e43X1”  Examples DIN: “DE*8EO*Aet5e4*3”, “DE-8EO-Aet5e4-3”, “DE8EOAet5e43” "}},"type":"object","required":["EvcoID"],"title":"RemoteIdentification","description":"Authentication data details. The data structure differs depending on the authentication technology "},"StatusCode":{"properties":{"Code":{"type":"string","title":"Code","description":"| Option | Description | Area of Usage | | -------|-------------|---------------| | 000 | Success. | General codes | | 001 | Hubject system error. | Internal system codes | | 002 | Hubject database error. |Internal system codes| | 009 |Data transaction error. | Internal system codes| |017 |Unauthorized Access. |Internal system codes | |018 |Inconsistent EvseID. |Internal system codes | |019 |Inconsistent EvcoID. |Internal system codes | |021 |System error. |General codes | |022 |Data error. |General codes | |101 |QR Code Authentication failed – Invalid Credentials. |Authentication codes | |102 |RFID Authentication failed – invalid UID. |Authentication codes | |103 |RFID Authentication failed – card not readable. |Authentication codes | |105 |PLC Authentication failed - invalid EvcoID. |Authentication codes | |106 |No positive authentication response. |Authentication codes / Internal system codes | |110 |QR Code App Authentication failed – time out error. |Authentication codes | |120 |PLC (ISO/ IEC 15118) Authentication failed – invalid underlying EvcoID. |Authentication codes | |121 |PLC (ISO/ IEC 15118) Authentication failed – invalid certificate. |Authentication codes | |122 |PLC (ISO/ IEC 15118) Authentication failed – time out error. |Authentication codes | |200 |EvcoID locked. |Authentication codes | |210 |No valid contract. |Session codes | |300 |Partner not found. |Session codes | |310 |Partner did not respond. |Session codes | |320 |Service not available. |Session codes | |400 |Session is invalid. |Session codes | |501 |Communication to EVSE failed. |EVSE codes | |510 |No EV connected to EVSE. |EVSE codes | |601 |EVSE already reserved. |EVSE codes | |602 |EVSE already in use/ wrong token. |EVSE codes | |603 |Unknown EVSE ID. |EVSE codes | |604 |EVSE ID is not Hubject compatible. |EVSE codes | |700 |EVSE out of service. |EVSE codes | "},"Description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"description"},"AdditionalInfo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Additionalinfo","description":"More information can be provided here"}},"type":"object","required":["Code"],"title":"StatusCode","description":"The structure consists of a defined code, an optional functional description of the status, and optional additional information. It can be used e.g. to send error details or detailed reasons for a certain process or system behavior. The optional AdditionalInfo field can be used in order to provide further individual (non-standardized) information. "},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"ValueAddedService":{"type":"string","enum":["Reservation","DynamicPricing","ParkingSensors","MaximumPowerCharging","PredictiveChargePointUsage","ChargingPlans","RoofProvided","None"],"title":"ValueAddedService","description":"| Option | Description | | ------ | ----------- | | Reservation | Can an EV driver reserve the charging sport via remote services? | | DynamicPricing | Does the EVSE ID support dynamic pricing? | | ParkingSensors | Is dynamic status info on the parking area in front of the EVSE-ID available? | | MaximumPowerCharging | Does the EVSE-ID offer a dynamic maximum power charging? | | PredictiveChargePointUsage | Is predictive charge Point usage info available for the EVSE-ID? | | ChargingPlans | Does the EVSE-ID offer charging plans, e.g. As described in ISO15118-2? | | RoofProvided | Indicates if the charging station is under a roof | | None | There are no value-added services available. | "}}}}