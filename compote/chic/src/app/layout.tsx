import type { Metadata } from "next";
import { ColorSchemeScript, createTheme, MantineProvider } from "@mantine/core";
import "@patternfly/patternfly/patternfly.css";
import "leaflet/dist/leaflet.css";
import "@mantine/core/styles.css";
import "@mantine/dates/styles.css";
import "@mantine/charts/styles.css";
import "@mantine/carousel/styles.css";
import "mantine-react-table/styles.css";
import "@xyflow/react/dist/style.css";
import "../styles/global.css";
import AppShell from "@/components/AppShell";
import { ContextsProvider } from "@/components/ContextsProvider";
import { UserProvider } from "@/components/UserProvider";
import { WidgetsProvider } from "@/components/WidgetsProvider";
import { LogsSequencesProvider } from "@/components/LogsSequencesProvider";
import { ApiClientsProvider } from "@/components/ApiClientsProvider";

const theme = createTheme({
  primaryColor: "blue",
  headings: { fontWeight: "400" },
});

export const metadata: Metadata = {
  title: "Compote Chic",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const missingEnvVar = [
    "NEXT_PUBLIC_CSMS_OCPP",
    "NEXT_PUBLIC_CSMS_OICP",
    "NEXT_PUBLIC_CSMS_PNC",
    "NEXT_PUBLIC_EMPMS_OICP",
    "NEXT_PUBLIC_EMP_TEST_TOOLKIT",
    "NEXT_PUBLIC_EMPMS_PNC",
    "NEXT_PUBLIC_EROAMING_OICP",
    "NEXT_PUBLIC_ZIPKIN",
    "NEXT_PUBLIC_CS_EVEREST_MQTT",
  ].filter((v) => !process.env[v]);
  return (
    <html lang="en">
      <head>
        <ColorSchemeScript />
        <link rel="shortcut icon" href="../../public/favicon.ico" />
        <meta
          name="viewport"
          content="minimum-scale=1, initial-scale=1, width=device-width, user-scalable=no"
        />
      </head>
      <body>
        {missingEnvVar.length !== 0 ? (
          <div style={{ padding: 5 }}>
            <h1 style={{ fontWeight: 700 }}>
              Environment variable{missingEnvVar.length > 1 ? "s" : ""} missing:
            </h1>
            <ul style={{ margin: 5 }}>
              {missingEnvVar.map((v, i) => (
                <li key={i}>{v}</li>
              ))}
            </ul>
            <p>Please specify in your '.env' file. See README for details.</p>
          </div>
        ) : (
          <MantineProvider theme={theme}>
            <UserProvider>
              <ApiClientsProvider>
                <ContextsProvider>
                  <WidgetsProvider>
                    <LogsSequencesProvider>
                      <AppShell>{children}</AppShell>
                    </LogsSequencesProvider>
                  </WidgetsProvider>
                </ContextsProvider>
              </ApiClientsProvider>
            </UserProvider>
          </MantineProvider>
        )}
      </body>
    </html>
  );
}
